#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : IW_EDITOR
 major_version : 28
 minor_version : 0
 type : 8
 description : ""
 subtype : 0
window :
 name : IW_EDITOR
 identifier : 0x241471c65525cba5
 internal_properties : CAAAAAgAAAC4BJtPvLeXV7M2F4Dx968m45Pa2hT3XlQJ9oxFeLQSVWZPf3hIVQZncddGLCnG8rZ84HdvLY1x/1gnAN70XeqkY8rAsbqBlrg3miiEVGcb8ieFCIfFMQKx2XWPTzBDjh7p/9AKfDQORAzjT7sXZxGqUisqPcZftaaDmzNn+ii6CE7WSwqJUdN+VU82ZCSKCWhILxjRbk8iAk7fIQ1ZseY4r7ZynuRkXEVch4m7URMY8Y5T0mRl1Eoo99DGAgh2EiwvMje5KyI26uzHoK8vzvlIjkjikbk5uVlhQUlE056UnJZup4GSIHGcjkkdF9+ZMskooNGCVcw7ZZUSJpYG9GxSnSaq3YUZynTfk1U4QmkjGeRFNFlPpCvGQ1DlHVcG5780FX+LyFYZwCeK9N+fAYlkkFf1sZYIpr7OiOaK1Bix+G0W9oqojC3iF6FTnWieLnmmdwmM/ZQzPvvmodDrQ2qAtTK1lnfYu3hjNt0CXZudnl1VUN1TbWNQlNh15+rAx6nGdJk/c0CYJqClVC2rm28fUDgIyHQK08ERMDFKF8PtaY12Rv3+bXQrCNzJ19y6mBOaXanHRu/tTvscQnkUUOareD/tBxt2yYcVUZFDE1WBGb91qHKsn7xuCXdHpOyA+fJDR31oqEjYeUuUiyhQhQMD6fc3G/KMaGev+Gu3Pz5CTRQQAroGBngW45k6gt91d8kgVMuqoLN7das2KBOWHyc2f8Sbv61hCopv0t7avR+kYKyyo7FHgj7x5pwv/t4XjNIpSWvjIqwq9JJBGSvBqyP2Cny0lp2APh+glBy84oXglZ4JB8OgnT76O78WYlC+FH23smmNmfe3GJJHxveCDA5IH79R75yln7J+g1lGWsmXbBruf6+i/oNIcV8u/JBgVHN9ntLXBhXFPkCJPwjYTcpLNaO8AI8N2t+13nIh76b3quEJcfHIqjD7NoU1L8o0fa1cYkGUA6t4mTW1H+TpcJPpFNGVxNWPGgabQtOLZpFOsd9PuzJ/gbnKbpfDt0QfjhpnRi9mlJXzf4181N3n6t+Bn3xlWKh5M/2gyoNbMibR8VZY/E49zhiA3N1W3WBwTDk4H5jRkqt2pXIQN1WyMjzg2Z92/JekcUuoWi1Q2a1KeAERFRY1+9cspKsMCUzDBMaJfUILU6EAXeSlPgL5Ie9+8TnLOs/sYUD4VgSJlEvRhTnexiLEEjOUvCpwrjYnEQKasFKqT6DoCTBS1JI4T1Q2ml0K4zco9Mi8cATicV02lbQ=
 properties :
  width : 840
  height : 480
 controls :
  -
    name : IW_EDITOR
    identifier : 0x241471c65537cba5
    internal_properties : CAAAAAgAAADbMMbYPCQaRk980hVq8FfJrh1puV9rv/BMmEN+Lw8Wfnov0jUS+Bc1PUdpO5fg2r70TGCqjmao8+Ks13C8rBSr9GezvKuD1z2puhvjQTU7Qjw2VorVHIQtls/YHnVWeMmBAJJsCIcwobYlE6JfZowJM59WfvNig3U7OGoku840/lFHg6ZqRA4lnGEGYzPKrRCcs4zvkdD2jAvNBt8Co0XWz8YrZACpfEpixtL+aJvkHPC4wCdW0F15NUn4mFrqY8yXa5dwNz7zwryC6+phfo6/I46fi30BxpYSwwu/sKZM6ICOdsLi2nyVTdLLJjNFN6tXKyaYwy9a+cQl/2ocFq61pR7exTb+awy8lpupEs/JsrHeFZAicyLkyDqvOZhWxUwoQouN2B79QeS7AbgRHoAUWIBiGxrp+Y7h5Xdldq0Xz6wqvmGiRatkbnDs1XwMgp6CKKi7OMMHkxJb7xF78lZbOawm+qXxJaBt8jo=
    properties :
     width : 840
     height : 480
    controls :
     -
       name : BTN_COMMAND_COPYHTML
       identifier : 0x241471c65539cba5
       internal_properties : CAAAAAgAAADGPFWUkFQIIRFpkJyR98l1swB99jb6E4WkJ58owx1oEyIcUZx8awRkkT6ZUuqw8zMb+APTM9lMFitBXWuCdCTCHpIa5vUp0wbuPKggyxdgIvk4xrgciRYcZ666yH+ml8CYvFvIP/q8xijZRAVfQ9yUvzGYB/zpHJp3L9ZENYz7dPX1kxueZIAiHtWlLcF2xrONs9lEr8bYdpd/fAw3juDgaye8A5lYK8LSrbfZUfurH6NWVj7YWK+eve/89Dk2a3mb5ukWDG7LIE6GkfjGqAdJe/2o0Suwiyy5hjQ4efFpDrhRxRN0AVGqqOEo4YGmVp/fMNxIXi4n6XlUPzxUv/WE0qz3IGTn+POwVyGS0z2Y3UHbLAUsaN24Pa4anNwAzUJh2MFDlEfXUkNhz/JuFVoMSX/G3DSkrgL6yLNG9ATK5UedIAGoB9XkCOv0ItAMB4jIkN5ewsnJNGxdUZ5RFYA5zim2uIW2BoE2KJZJ2OS/CgLCbSH+aucGdB8wVnJcUL8DCeLwkNrYy/kf2KOCEZ9Igug58V5z42HSFkiOeLTfLepxpVu81oSDzxXcaq1xYjnWo5nhQSUzRLnW7DTS4S3x6dhaI4Hgm+CiywVw/mAZN/0OjqVyqfi9ub3A3XUtEKJx7HcrlwC0IJRFBwDsMfdXoQqIRu/49DWFTwUpehW6xHLyAfB49Z4TRvIqcxAgNZ+HK7o4zVlruiz90lDjNm0oufpXQp3l7iGGlOCMp5LSWjUfa+JEOBxOZys/qAABlvBwvVAcejQTa5Yu1jUQHj4rptXppCm58tQ2f3Ez9LWT9fo+IBunpoFzAhgJHPTr0khVxlyaOgT8WAulb8vNxJKPfBPxbRx04HzrCGVXn4v/0574WxPRkgox2+sOrdteGoLhDiXk9E0xWrwVTKTN3yelvhbxYGskmeXHRX99pVjEV3L+vrSRe1RvZd9BsxOLkQ94mi2pk56HcEQYxI+Op0ITEvPG/NIc1xsSOM8hTw+U3C0wAKRnFlSmQ6Qr7IAk4qLX5kMMQvrJLeAWBDYwN7EZK1kuU7EmL+4Y5FpKMLi1ySTeDBpW9mhb0BoItwsJ4kFbk/vrJVmOSfo4DRdff3zbzFJ80KwVMq5HcrdIOEhISu8+AA96BbswE//Pu2EGaZ32kOi20fi+Sbzk9hTIpH63ipA3klQc/cW6QxqCrotLNiYY87iEwNvdXrgjzn8HyS/RnoTAvO1wZsH+TYcHBcNQYoRao5Vq/OrkDA==
       properties :
        x : 738
        y : 7
        width : 42
        height : 42
       type : 4
       code_elements :
        type_code : 4
        p_codes :
         -
           code : |1-
            
            ToClipboard(MarkdownToHTML(EDT_MARKDOWN))
            ToastDisplay("Copy to clipboard", toastShort, vaMiddle, haCenter, 0x333333)
           type : 18
         -
           type : 161
           enabled : false
     -
       name : BTN_COMMAND_EXPORT
       identifier : 0x241471c6553acba5
       internal_properties : CAAAAAgAAADbAITO1DxSBntA8WOaoVspi2jV7MD9n38d8d4ewRoklPm9VfQIjX8++xgh6zej7szrcCS68tqiJrmbQgE8ioAv6DDRN33QphsoHziUe5DfYuPudMC9odW97Kvy68mJBvmnvPnMsstGXr0DWUBrPXlymqX4p2F8tCpqDP2TAlMF8/ief1CTsCwfcw7+YfUIhDZqRKqPBsZD3iXMnEnaKB4TFSbjP2KoCXntNgcpliBZhfkXFfDzGI9nnZRo22rXUtM9VmzS3dDBmrVHkDy0iePTYva1valfT53XOHKoFWjjyJ7JBQjsPKlLHr9EywONKmbLacST02/dDUNwOPXZaEPn7piJJcq8Vx1TpxLyWGnG3xGFPUPK9XbmIqgaJuzTmRywYxl6R9cmxwzqoEIYi75D9Q9bk2ZFeJ8/eOm89dOjfyxQFfI3cv+f4zVPEbp+LZmJwxLOl1Zf2DnScKSMHSc+yrbKCJGFQvu/qXCRp4FQaftCQ1VCWmeLKSreRbmlpWNIDj0HWZl1tPQAOlW4F9fmSnUxM9tFNtf/l4/hcXs3ojqRCksZFjlzSiPJngyAavDtfiSdikHnng09oi2v8J8+wrwpHIyV5L7ZIznm8vTAYJw3ZAC3CwftXgGey/pGPE9isIkVqaLlaDd1Pf4hfofs1nRmFI+8w73a9WOvwSwIv5M2pWD42VMJmYSU/fnx4exqoWimfV0AInUFxPpwM5X7BtS/liH1kYcnJkrOlgWSh7zZW77WElV0PA3L8ElOHGMddyTcTJaa7yU8moXRs2wOj6u7pqtzE+qtdVHHN/Br3CtQ/DOh+DrpvwYfIgNGWpsA7BS+ANJ38Epnm4OWsWL+y705qWJaOfyIdIfBXLC/JpUujhhUgwwI/6JxXqkOp2SBdW7Xp4zHkYxkY1mJ0b4JChE0QWiTbwI3RHaaRRIH3zitsU0THdsvGM9fweJeU1zr4OMHWwLGFJ0OEiXLHIia4T1CVEzNtXJI57Dmt6vFlDLc8QVSc60v/Ej+euVlPYDHQJ7FyggQU3T15jWoKfUah45NEGfFQcMF4dXh8TkTin97j0gjzZO/8WjsXmgtlRxnW1BZq3pLVfDtqXfxBURDrMAmTFooWkmDUAgZEoTrPchdrO3GDOI8pIw+f8/FQ/0m2COvFTHW7XndA9kZjYeSo2oWQKPYTImnuIwd3avBYEBTcw9FIe0tETj1mEDBCu1K0O2qwPTSUw==
       properties :
        x : 786
        y : 7
        width : 42
        height : 42
       type : 4
       code_elements :
        type_code : 4
        p_codes :
         -
           code : |1-
            
            MySelf.Pushed = True
            MENU_EXPORT.OpenContextMenu(MySelf.X, MySelf.Y + MySelf.Height)
            
            MySelf.Pushed = False
           type : 18
         -
           type : 161
           enabled : false
     -
       name : BTN_COMMAND_COPY
       identifier : 0x241471c6553bcba5
       internal_properties : CAAAAAgAAABSvm9q+bWG5ZSS0ge741HEisRA0rIGxya7Kw3WY53S0yBCNgdqFGbg68hHHY6YLuVqd74PytSc9iwsaVd6ENFcTHuYsUEw02n+JMcDDnlFOWXbggA8AUopy594g6PpT43jxO4xotswyDg/hsylTmNoxyarliSXLmn3dt+zNZ8XMNJltbVesFE9qfj9hmIAUdjP339xsgead1tKUDFJv7PDVtL1kYfJCPU+lpo4zd8aPhU9ozkCjKKmS5a0EepX3f+2opQm8SwYPrNeIw993H848GB9AAHiAktcUOCE+lOHMYoxItmBom24muMspHFdPkgoIOFeH5Ketf3PMqLQ10nYT7iwKhE6qbLqrIRHie1paiwCRMDSn1AKron5fcF8Dp5G1Z+miUXVanlPnQ4vMZrADG6+txwuQwHllh6UbjqQTFcalpWgx6amMq0etHCym6oH+YHRicdA50+p0mHKufDtGBLelxNxsbsUQSaj0/lTusmmfjU0HF+TEiX962HRyXd0MKic2KrNeLfw8Kd5kXDINRrP7VQVnDIyvr0gYV1YopxRJWhRgSs3CmZmcQg/twADrg4xSPfuEdAgeHmcjjp5O9B4H+kPIXU17TdRE1CYIlPw36FqOVKyN+RSdfefFH5bkVkCrIAE3wu1RmcXSz7FDz4pwZFh4eAJr7rPKwABc2HOi6ra/8HLaDFucDBrDS2I4Ck4uUTWm+qWnHj5C01Zo+Lfc4XFjiL7UGEIlzGwrgQmh0ObnVR+Opn2goZgMBD1tbXHN/SZQIJ0zbIGWNZPQp8jmptCigWYRNNE5zRTevbHh2cv8YgaJlKe++dImDExkNmcxgOSQPAuN5zyhFToaqQAzGQSBZ11pvp2Sq/mzGmiHCwAEZ858jnnOHL0dt4yKrlX2o3JghAyVVjFo+wz3hyKCukd5cutswAf6LDYObOSWtRrNQDHqXzDbthglozy3bNNPfvHM6hOqn3FNYtXTKSa82HaIhvqTW7dn2igzmqNwWS5FlfkAuLmmT+tONRAUY9R4knW7K9F6Va0Dz27FnciqbPbVrpAFRaHFTSqbsRbUgy81IXVQWXhY5/dJFNgDscG65cAnfli1YQg0Iwu2mZMI/ZmuHVHY2L6e+8MJNHjg14XxkAVMT8atYNylMUSNJTjH4mlBc7qZOfPrLRFkSUKdhH1H2vSw+SAZJMDFWGqXHdzjmUv6sGu9Q==
       properties :
        x : 690
        y : 7
        width : 42
        height : 42
       type : 4
       code_elements :
        type_code : 4
        p_codes :
         -
           code : |1-
            
            ToClipboard(EDT_MARKDOWN)
            ToastDisplay("Copy to clipboard", toastShort, vaMiddle, haCenter, 0x333333)
           type : 18
         -
           type : 161
           enabled : false
     -
       name : LAYOUT_TOOLBAR
       identifier : 0x241471c6553ccba5
       internal_properties : CAAAAAgAAAB4FC1Oeh+P/rPFaHOHTURjV9NWhLyRxqRoRHnYobr73Qqa7JYWsiSLq1exQVbsfjMUoLKtsBqXF5EfpwcF66Es76XNiLGbR+boGnMb0CH69iK4rXEHuYFmtY4iXnOZKYvzZI1sljpV19m1N3rrygex+z+iLNy/SMrt/QNwCL3VHe2fLjeEcwI9ePee5oviakQfcjRK0KUCTLjk4N0pPC/+pvFgigClw8q4ltCboa0HvPbzahKqmEpFzzdPm5GdLgWmmXB8lkURV/xIFohP5cdEQNRJhizIhBP0B8GyzQ5Iyok7B5k1vCDhOlgK2UrNJr03DvJmbyDcP/O+rccvTTOT5XJN0/CStq/BISwTEe3oI2xXrRTsbOrQt8MZuMifCRQLozQkIWsoHvyudd0Fo6VtI9Oo6xCN6X/JebI8UMov/AWo+yLojn0gkkL7377tV10ZawZzo050UIpQZ9lQt1C7BEEw17WySczDCSPYmheMzplQUc5DFa0mcUPhS5+pb4RE167jW7qS2BzB1MIHKPf4EsLawekk6oXZqlW0RifChexS2XomQZDxUDo6gE1YbO2l6GO8R9DIat/a5sCVXJsejKjJFrXGRZKNEN86IPtN175NZFP4ajbGi1dpUU+/IIETzxcPDMkWN76ExeunH7zVXEH9zV/4otLbHQfMTKv3dJNOBxsp6gqVZdGettTJ8C6ep+CsCJRQuqKpgwFh
       properties :
        x : 11
        y : 8
        width : 612
        height : 42
       cells :
        -
          internal_properties : CAAAAAgAAADMzAz3zvZr8CgWOtSSs3h6I8vBPpSruVttNRJwTGJU9eGf2otlBEgY7tM4z89xa+RtaI/sCqvJ3vWFPXov2d3yiDObU7REeSYVxmhqKJyBkSnAMTZ1IUDvst1vTuBt5VMIsHbvtEEmNR0YHAuquT7scGXrGG/R/VFi3wiD
          controls :
           -
             name : BTN_COMMAND_OPEN
             identifier : 0x241471c6553ecba5
             internal_properties : CAAAAAgAAACD5t+wn+rw218tp61YJm4OW1BDIvA4nTznZ68GaHo6uhmar+gDG3daswTX/FnuZt1qQCbzf9PqLs7seDutHWqs57ksoy2bN/0QVqCwLhGksZ/qRFx2j2hQr2Hf6SU7rJrpQbBZdC0sTKs5d/+lGgOAgGyMmsOVPtaKD8q57uSrehvKEgYfVwxScBCjwl+7gyN8UBPKEHiOD85f+M6N7GqPkq6xMJVOFQAyMUgHZJhdWJax2OCbHg2Q+e59Yg+E199jC+2QAltUvZblbJ01v6m1gxt4fqp+aXlreZWqNYAZ0OECw0C9cFdYc5m44mq44LfeI/Ku+9rMBWNz8d/TptwUILSSz3m8ryUe1ZT+ReYrRelmoG3nOg6k6Dxs/BDGHB2hF34NSjPOEDlqu2Iuun3p0dZsivsbS4e2Pexa9d7DHfB9kddh7AV5QYqTRqIsCgop3Ef6cNYmqAvA7k1gRhBXHfxjdcZF+GKY56gDOgMMf/DXR05sXJoNHk+Fne3CYmm/v5GARD1gZ8q/rm7En3935EuPee3oz+ntzTd4sEAgkGNoJ/chCUx6pc/Iq+pTMJQR+monr7D1STh0fEf8tRboBnjOfdD252v2N9TyXRfAsXyxBmuBeQ+hNzqLBuotA5Ahg73kp2K1HhOKoJkU5jrKPEHcwOcGoP37c4OGG+eIm1dF4Yvn+xTdE10vkzxs6pgaVaIK/KYLBM4oF8+ChdkU8nqt6HKn/RIx3tbRTYy5KAoEwkvAxUHP8w9LQGpqRWJLkIQhNH+Kz+Dc63k0rUlumJpAsz/sl/pwInNWfmthImhjGPdG/+fX0K61HBH+bGas4JwjBFcLe2pcMkNC+7OlF/lvHw08QNTSfVf0brvwo/z454u8Knt2krBG8ceN9f61WsvxVXmeE1qdZ3/HhcZf84zaxkHi8rjuySmUbmkC/4n6LufqAZvxoyVh8FXiuSVpfOqO/ZtgintUBWubtUxzPN6JDxq/KcxCybUSk0TxcfwR7uERpo2XnmdFEE1Yr6SfNsKm793qffGPM+eLyOHxZ7u5f1hkZ0dlpteMdxJSLrP9Phkz4roIUTZKkM+y/FsOkcaEkU0x5tAzlZhAhzSOVNYg7dWXCE1jSFwUvZwd2UTufg==
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  sFile is string
                  
                  // Opens the file picker
                  sFile = fSelect("", "", "Open...", "All files (*.*)" + TAB + "*.*" + CR + "Markdown documents (*.MD)" + TAB + "*.MD", "MD", fselExist)
                  if sFile = "" then
                  	return			
                  end		
                  
                  // Loads the file
                  Load( sFile )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAAD1N+K28QNyDkYeltOR/NUyfnFtksWYCi8xv3OdDMoWDnedNnoBpcgvumLN7vigd8aCs7W3IF6hJyqkrQMFMAQEztPMZMeaQg4uMIzPQ0icx9P0uIfkJQPx3ekpgwPhmGXelIUYW8MxrdDKRMRVmY8SEpGSId6sP272TrSa3g==
          controls :
           -
             name : BTN_COMMAND_SAVE
             identifier : 0x241471c65540cba5
             internal_properties : CAAAAAgAAAAsgh7fJR8eoFxx+4zB+XekKmo35bS+NTEvdqK95XVkZDK5lRbTzOkXN88mzkLbn/czgRHKjbkEDlJuLPd+zqEEImmsn4ExxrK6roX+7cKsvFY2XyJmndrzY6RAcMbJ9sm+1aMrO/F2NOgzSb/iM642h9XsV+FuH+c6ewpC1ZSKj+v4bYVZCVTWzLXqzp+zYJlLG9jBTvJlTZ6GqE4qUh01/tRe+M1gVsd7DzS6WJzHEiAP+haAavswe3MU+GTYEmLxwZ1bnFs3cy7z1exfEE2KVHRuMyKq7wf3r6qHn5wJ+pIPNMoii8qch9hltQ0qrodespHa4ZE/5ei5Q1GWH8fUrZ5mTTg8F2bWZ+WOlQe74Wvp1ZtBKdXzULO0YgSVndrjRtoCtfY8gS4dBTtJ8jufLvIXBXOPAaPYMJbOC1V0pBD4rOwrEvlMD3FDtu6le3KDYYyfcRct8QTxMrhoEjRaMNi1beqwK1VEkJtMGQM8uEPnS/SmL3oB3+zN+vqtJSMlLj1IOV7MGkIbdFAPJTbl4PISuiAI36gv+KlKuUq5CPHzCtQemYpGWBpJndkYknSz99Ia/jnGbpW3xSG3ffsIFBt+MrwCXr2sQ3L2uTUrDHGO0WT6yc5o76WY5Ho+WVuPUjqbybR0/YLGAoiv4/Z/LxGEr4D7uUjGgF2OLZkwrnDk+pjtsju4AM5f/j2CwZonZBjWTA7gWJQppN/VmmXdZSFvRfe0z18cON1SHkqy5cXtCh26v+gmuPTrsdSm+m1fmASuXx8XEoNEA3+/tdMTi+SoTRIqOW0XgPOod9ZyNYm7mrjXP3If0AQ/BBKIkXbiA7pVLFO08QYODL5pPaBv+Y19dboUkuk/6leGVVbLLI8jj3Rp+SMZ4zmjTG4JXkPmCIUp/re3S0xfHmtK+eNSRDiVm6umsfPlEN3GzdfZNCJSH0rJsllq6UWHErchgm0uFRja6qUpu2vXDrkat1FkajXtasWNmPGQxkrZIFIWnAcwZDQDGlvGUc8Uc7qYlnmfik1QQH8AKU4coynzwAe4N9xjLfrlb4UMpj66RbDgIDSIPkZQtV5LU3Lx3RIPnq6XINGyOlUv6+b20tFSt/nlXuaV4SffwP060yESZhlT
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  if KeyPressed(kpShift) then
                  	
                  	// Picker
                  	Save( "" )
                  	
                  else
                  
                  	// Saves
                  	Save( ( EDT_MARKDOWN.Extra.CurrentFile ) )
                  end
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAAAV+3MeDXN03nUgbG42x24FT59SEjS3PRA3T0ZM3s/xQmGzxL5M98CWuD4OQ+w/vyDrh9sn43kLuOOx/5J3JrNct5KjhzGtYmulyMMPM8Xi8SZYkc0LLTqJo3CALmNme1LpbhZD0LsAQWDT11t8alP4gWhDO2orsbytl3y7rcyamQ==
          controls : []
        -
          internal_properties : CAAAAAgAAABHCG98gD5aoVMvY0I4vCruWnnFst7CMqohpmBVFjK2oQnQXBE99pKnXjfZANeVL15CN4wp4mOwhQXSWTVcPp2Ltk8w0pD+z+6y3eBg9zG3MbSLzraRjZdmDV0habVEfut816zEbzR0InjH5PKHjJ/cgJ44aoHOgvJWIgHgVUuOck/V
          controls :
           -
             name : BTN_COMMAND_BOLD
             identifier : 0x241471c65543cba5
             internal_properties : CAAAAAgAAACor9FUSDzTgJING0N8MyM2P+m2k5bMyETivJgDDvPzPGVIeTJOulWJ5/6TYbPEYPK8U+Sr5qW+SsQeaJl0biqaO4ztbrKd5BiwNUJhxwAojTwP0yxzpbaYbws5wNqVa2EByuNZu8RHaSSDHOQpnBeVFb8z4RMS+ak1lrqoCf17e+wkewiNNC/fhsWm0vOWHKPAl9cfDFVUCJJqnbVOxlhk7R9Ivk8GkRrKk8/jKb9CuOs03remuIWFC1DtVSe8HVfIvlRhxqTWGw7zTwmAmkQd6p+EyAD3TmYZTQD00AnPhm2H2RhHt8hxv0oK48ne7qN8SnOdtugu+SWKeKJXsGWsWWnF1quuiQpVTGdDayvhV99rottmKbMNabKPU6j2kIniAKOX/rG8RY8a4N+A+O4PQIWjSggEa9TZ+xyK/enVQIIohe2mhgjComsm1+I9SQFGjFpaTpomLg2DxPQVIQoiOTdjXSEdgu1TMZytIRPtUEIXJ29bfUy2782zU4vHDt63m9Xk3dGRGGK+RX6vNR95bqq2aeo5d4zGlTKdr5OD6DhP72kWggRtDkweWvJeya6IYx0EJ+m3DfSbz4cH7OPagO6Q34wcB64Dzaay++e4DZjr4RK5Bp+T3zIh+vZLCIQoF54IIB8xX1IcYMbwzWMNCreoysVzNvlFFkQbTV4+pTpb8Hmcob9UHB/Ep5RANzYAc21blCZ/p48vJwhKWq4/IYGAhU1mCkCVht6l3bJtBR8VbQEQ8ZH/4QiiVjWaIYN7hKmq+bMq2coi9JpWE05Vf3BphYIlL8sLyfB/cCNtUeiKvL8/kf8vAH89ELr/Xs8bDPzy5w4anUoj2DQTtE4wVtKyywzIezo/q36kueoiXqLZp6AScxx4dsmXrEKJhQnMZ6zLwL07JdCyDR93HMZb8N9HZm9kYN7jQAM6a95AgxmZyKHoyz38TR60G9gx3+k3BHrhS7+0x4NsFJ7E/gMhspwtFdQ150Fgked/Egc2KSpq04LwcTdM3StxeOH+BA1L8ZGrzJLBlL5ji7Q3zCG9Jw8SRlpHsfFq/+2ag4oGkCRR+WgMfJPfXnIvvtGi5Vr/7UkgQaEfSy+NlEoHglvmSL6xrby745SwSsOHttVC6L6ieg9ayikR/pgaFAlAy1ndAOJdnib5bbChqQ==
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( bold )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAACvMZxsa/HNyq5ASCuJhEE8RtsRcPUS0l/FDXn5WPbeOCNb6hjdr9inhmBjGvSoZ8j6HTF1BMSBs47iu0tl8K+fUwix+QYRg/PjY5fEmsMbThiR+bjXUCgmNrhgQEqsV6SHDTJtClIK5gk1L2EE1NrtR857qjkfrdxg+O6gJA==
          controls :
           -
             name : BTN_COMMAND_ITALIC
             identifier : 0x241471c65545cba5
             internal_properties : CAAAAAgAAADCwi5UpCf5amb8Xa6jZg18ejXmQCvsygJ/dRo9mYq7uimx4QtmmUQSCGsQsC2LTHZOTYTNsQZikVv5ya5UXWN3RmrpCPB7dTI6S5IorqQ5Fa0pUclIlIxhhd9NGoqe87Vs3m92kc8gMYJzLrc6FbcaXUbtImGg3W2AnnjT8R0hGGgxaIKAeN8g/kp994ltj3xt0zBeqf37y7G5RgulXz/s/WSHUCmdtfylE/nlKkPhcn6tI373qTlsOxubHPlDGAggrjjgnt3H+jHc+yipksLkey9aL21tJheXtFOLu6bKHLZCtUBTVAa6s9/XAMa62psg4bxwKb/pdnBKFr7SUzcdGqVRtYWnaF0Td1+RZlYByzwBv8dc5TXsvmrfMiau7nMJ2w0t3vOw/a6GK5TosJaFX633QrhZTyYkwSN9a9DFNZ5Rt0gLBucBm1PsbfRMbXsLh7U097Xr3jTnxywDzqmMksTieUsDJ+9Dz3TmePYMgbk9u/Ea+jY5JMUOreL8Ie86K6J994AYHxRofPcFq7nOLsTOIiMTdOZHgO8zwDcOUa19iDNwCfzZEQ1hFK0x8VE2pGL98vpD5bCA7zpIZ9F7TTHgwyCh08JzXAiZ3Nj0EDsQeU79g58BDTH943UETDPbppyWXjjZvy4zOqW1yJtiG7jOwANqgpWdn06ORu0Gxkd8Fl+CvjPWZqR+Jr0TDR33SCcjZLdrPyt0A735I8i6PDx+gZHF+kareUJiQOEtIrT+N3tK1P8Fvz/y/Xp5UQaCXX2Id9bWtxAfSnvtMhLIMlExfxzajV87sDRm3RjBRGeD3EEJ/vH1dth/2cWWcpQkEWx+2zGYj0wAdOscZ+Bl801YJwjXD+TZ+mIlMCX0EbVU+8KcWErU8p4P7fKxTPNoUXVs8VVUynkCBj+hEk2vLiWGnb74zTdMBvjEF9zbXbE7/QAPEcr7EDIjIeBjijNPlg3iFMNRdLNPWIU5oR38bezSeTB8Rs4X3W4hMlys1vOuE3LwKK/QpcbTXDM9Mje2ZkkdYAqNnoAEp3syxf1cToZXGF30Tqwoof49irf64tlD8athUNdwjYlNQ/rAIYEeQE/F7K/lJAZCxumCC+LrdTXfKR5dAn49+OpCtV3TuhZ1catkntk=
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( Italic )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAACnOZRks8mFZu6ACGsZFLFMTvMZKL1q8v8dZZEhoK624FOriki9j1DvJjDzurT456jixXmNLLxxgxa+W6olELi4SqApDSp9L69fF4MIxpdPciQFrYzrPFSyoqxMZCbAO/gz8Waxvs5GwjXpG3UAyO6B49J/Pp1n9aQ4AOaoLA==
          controls :
           -
             name : BTN_COMMAND_COLOR
             identifier : 0x241471c65547cba5
             internal_properties : CAAAAAgAAADoBXCDrZWi5/H3UeTPa5kH7dtAVnnTmNeo+8otBjdboC85Ohw08mkhOzjyjU95/8K6h6+gl0kd6cD3iifaVbIjIuYoLZDhvBkzJNVLgKhVAbqjjWQFppiBP8b+teFZ46ACG5rmAIy7gm/5mjCroB9VogjJBrTLy5mFoSAijsDRCWdGrV5SAkb/Z5oFNyXmVcWpSnOS5aJkKImfBw2463fIP6uBIXgA/FsU66jUpSPhEYcSckEc/mXjCm0RMzBcFdeXzkS6MNKPhOCQzkDxZ/6rTyoJVffsFrpNaYEgaAlmeWXySbGvzX9vXRPn8xAdkeb8EjqqjmXXLI+zSK/nyxceMDRxZMz9ehN96keqZOpuU+EbOCdDhiJySu10eUvdrefnNZiyFxzCRQIMvvTFE0CdE1WBsMWmkODsISE4Xa1UUYmltk2kzcPjWlGjttVIZTcwrzr/LsdS+2AZ0X/mxxriwGNLHUlS0IQSMUwSb+ZkoZYwkx/27DP0kiDvmdqc0ZjjchJB59kxdPTdKgUlC0Wc2rsudhl52C0lAFJMVh32VrA0u1K3yUQOJkyMcTmcoJZMlGdW4S2NqW14Odk8JcNHxW65TjVHfy7Ny5379pZK+GQ+DAs+4D/mqfI7SxlTD7BggRqxdNeyeNkTFWaqi/4at3xGBAxJlb2KdCmUCRzoK6YG1u62iPyNR038I2wo6ArZJkZz2HAzuXteArjbyNupKBoXP9r5mzYGe/fuwbT4yb8DJ4vSE9Ae+paLKSkqTyaS+Qcg3x6Nq8R/C5W2TWvkERLjYU0QWNkyx1ofVleReIyqlVwy5/mDHsZ9V+t4HDwG6F8v92+ZJcdmXgIs4dwOblGfgRsdW+rJOacgYxmrxroGW/vzXUNioYdWzrYRZMeaPB+1dxgpFGYjQ8XfUYXq6lgIabdKjlDfQhz107biy6FV4gt4hsfJ/4+FK0OGHDXFzHkaShOHnoEig9G5tFlUncD6L9j/squgTO6ZR5urZ7ywYfE4VIrnIe53QqhYu003SBthMytTdS3XAefjr+VerMh+UsHdcwMMg9AOdUf15Bi8zzZCBu1ozhBMiJWQoEfDD7pLucDAfsDKFb3VM3c8QxQPieSga+j5jNRfTTNYTvdLdTi7fkw07eVv0KgZ/8H1DtelLZgAlBYO8DBTJY5keGuGiMdtHdCsKO4zFGei+C+gsRzr9CmbCjCGfvwS8ud5TX19+hkTCEIe+rhsLoJDDMcCb6G4gLfMhk9SvqfB3/LM+k34I/pka1mX7fx0ezOQ8IIIhZ5Nv0krfr9sYwEk5XE=
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1+
                  
                  nColor is int
                  
                  // Opens the color picker
                  if SelectColor(nColor) then
                  	
                  	// Applies the selected color in HTML
                  	SelectionApply( Color, RGBToHTML(nColor) )	
                  end
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAABfQYwcm6Edkt5AuAs5FBFsFruBoLUCMv+FHTkpmJZ+2ENL6liNr8i3ViATOqTYl/iKPQGFRNSBM276C0o1APBgkvjhwU7JO7uru2/cwovjhtA5oQB/6MCuntAYWJK03xzftZr1kuqijpENZ5kM3EJFPzbjMsHPXQxQ6N6wNA==
          controls :
           -
             name : BTN_COMMAND_STRIKETHROUGH
             identifier : 0x241471c65549cba5
             internal_properties : CAAAAAgAAACpaKhvBwehZKPxNL6zshC3asuHklnU2adVRLPwmcbR8/540PwzR5ibbhxgQdAtjWCfP59HvV5Kdke8qWRojFsH6t6vow7+QPlKpAFcT6ZVtTJ88fzZ8VITbLCS4uo0nMtJGfWkl1KtFbw1AWjW8e1KPjG6xbd+r1Ce0VJ3RdstfECrKqovZmtOh5PgeNfp3G48Ynr4NvK3AyQhs3OpXjsCjWAEh1GEAbDzOZDijIquNLDcr1/3O+rlTcpui86M9KSrnlwDB5Lit8bCH3PFqKK+LfPgZjKqBT/pz5/I6LI1v0mSRxsruPjxtfVdrTHTrUlarBEAEyZJ3Fxp6G+DzK5vQ7f3xgMlZyxbcLYW44/CzVjnWXvs431C01lxwChEAT2IG895kNbbG44HCg2BWDprUq4vT0S79aM3WNRJhIN6vX2HBLdXZ+NMXVcN64oqcOGuxWWp32hqvhq65DCWtdjA0h0iFy9Vz4LPmu/4XGQvMaq/oG2Y2xO6XvL1285X3uw3j6W0bL74UMr1wB4VpHDdCeXGi8/Dge0DmqDz9ra4G1BaAUDOQRcNb7rA6dEaut0Daj7EL5Pjy4miRpwbU2C/BhSg9bsOOn8I1KTpBBGaWzXuPMsiUEl0ZOnd7h7fjL5U6RCJ6vS7TU/S4rhwYDApIPsmWWB/TzUJWe/3yRtMm33vqpkYFfIj9CIk66U8qOrbH9AZ+qtlFgSNrTeJHXYo5wxs8VM3EdlbpGe+1qVgmK5kiH39mxQwwBkLuCbhzmS3LPVmYW1LCgmdooV8KzjUEHPhrLVEP9dOiE+53nmXhJYlK9X75flplUw8HfuWt9dtO98GTmoIGEKvQkvy3Agb56hwHLf6lI4M7v/Oy2lmBCaWJ9SBeP/VVtAEasM5ZBZzp4wbrQsn/AGzL+TkwYK5/eLgT74whXnkKxtRZN9D2F3UcKqVXO4N0NgJ7vN8WZAvM4CcJ3iEyhsKO4Mi2Xj5c4D+Z0L90RS9IXm+Ups40xZsSWiM6iYHnmoRscCFE4rb/5GpJ72/NwOoQhdYqQU9Gn8Ym2FOPkNvD+NwPERHyVcJ0Nk25WI62oIY/u8VFNVMKc+Mty86T9js0yCs7nc1vXzI9v4+2KhAh69csIfm4ka/80hyEoSafEttyarjHQ6Taq4HRcSuYfm5/+RFPlTQqh2XgYiHC2Y8M8+0sadU8MmltroR3uRgB3bhdI/99pEyLpIRaD2m43MdvIr9js0KfqCo
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( Strikethrough )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAABUH1glFqrFdrH0nCS4BXWZjDyxaFUwnzg+A0P6ViP9/UQ0ZJuYOvOrctHGahjz9nyD6Ud2fuOi3vlgYTXpntm3U/RHYJeF0fuipQCfifyhOIeROj/pnkoZ1fVXlnHbEmgpPWSH2y0PxUr3vHXDg01nT/CyepVa0VlPcvVd6l4+k2tV1Q==
          controls : []
        -
          internal_properties : CAAAAAgAAABPEMGa/KrGoGfBDxZy7m76njPBxujUyLyRdGz9fLDOmaE+TAHD3Ez1diUN4OVLS1I67cClRPWe8/FM4sVACqnPhuUaaIKEmW0TcAX7JBTUxCkam+l+mCzlNgC25FrfU6a1Sn2DmIP19a2uPVFIq/B7Pd3dRZaxn+X/zQU04d/wWlfd
          controls :
           -
             name : BTN_COMMAND_HEADER
             identifier : 0x241471c6554ccba5
             internal_properties : CAAAAAgAAADIMSDs69/NQMuwFfXhB2/0XQaMJX39nLp5jDWZpqTKOnVNc8j0GVFjBmzrEVi5Z8QXnlC2wUrBT5Bplh66iiE4/ZA9a+dn0SBA+biAivGa5gc3rdfDvTlG/5bninD55T4NdunJyhcUIwc9Gnygo2q0i9dwQejJ0prpmquB9Kzuq0crabef4F9o+lWTo1orLPVfgl53TmmEvcpu3JUMuEjfiAEK19/fTKTL9gtulccfLCGCWLZaFsLnB8+i9IpWxVDb+d7jaNhjP+K53YmV6MCBw0SXgM9Qre0VsDSM/temv+nPxiG8o8pmGD6S6haFCUVEfcS47EuflsLUaOobT2L4pFN4rEkgu88G3/l8pzKPkMhpsrEW6gs5FtxlqrZ+71oP11H336R3/eJm7zDBjfefazvk3jGfSkIrswLN77774j0EShZ3n+IgisIhoYAGgGB5sqPAMrjyzlBzmjkaW90opsKx0kowHSihCReZJCR7ZMcxRpO0I1eoeiB4kzUAQP63PvDt3k5VOiEFHmuQCO+mAV2a+1YCPhpNI6kMAn6TWRBf8ahmaV3l97reu+Lv9CmYK/SGXoMw7Bd2KgN2vxBnJdRn0OvuG2mwVuN26+XfmRCiClXXEMS4LTpi4Vh9YCd7gTXFCKvWPeuRSDFzOh7j+ba/2PB5ZozEhwxvhTNzitJy54hTFev+pPVImQ5f7gHgzuQF3nHVzmKrsIWZb3/h17e0Mvl2QhYDyDc4A2gs5RXqzI3x4hBwtchthMtZMKpLyZTKk48d0oexSxBwyOQJwlNIRobLZtdaiWpm3/SbnfxqV6+x8qQ4bm0eHHJG+Id4Ezvv3SQcS3dK21C2uc1iXNTOnS4znv8nPTI3eyV3WHwgL4DT82yLwfDMxcPliE8AfkUN2qpalcrQXGLodTkCOC7D/C+iIMlAZeOwMr0vGv7P3I+ue11aiLaV/j1jP4Fxr7JVRZ6FvwwTONhDSSw76eF8viKlX9qJePqby2pHLQtzYjxFnrW9+rauahQVl/KALCtRGEAfIWb8bQqG6xOEI3p5mavco08QQTfHhNXxToLC8LTRenZ1z8vEtFrOsux0lN6dXDX0/pQttJ1W3dL9UoWpQ+c=
             properties :
              x : 1
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  MySelf.Pushed = True
                  MENU_HEADINGS.OpenContextMenu(MySelf.X, MySelf.Y + MySelf.Height)
                  
                  MySelf.Pushed = False
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAADcl9CtrhK9vNE4COSAbbmp/FiJ7LVwC7xeB1WoiA0PtxpGTk2yPCW9DJdAyLLt8FZxEzEgwAVEQAO2uyqfjnv3BUUGJ35+nNVw+44BI1LL7uVveFHbnAST69NdwONpjO5HG2qBXaOxx9Cl1nfVzZux2b7MFI9U169dSPelMua2C+PNXQ==
          controls : []
        -
          internal_properties : CAAAAAgAAADjtGV+AL7q8ZNPQ+KYnMpO+tllEn4iEkqBRkD19hJWAamw/HHdVvJHvle5ILd1T77iFywJAsOQJeVyunG+OCUjql7FTZ2hDO4yXaBgd7E38TTLzraRTZemTR0hqfUEPuu8V+wELzQ0ovhHJHIHDB8cgN446gEOArKWAtFg1cuM9vNx
          controls :
           -
             name : BTN_COMMAND_ULIST
             identifier : 0x241471c6554fcba5
             internal_properties : CAAAAAgAAABSG2XackRheehB75+jd355Mn/RKJr1u+6gfXSEfkV88RQsb1DPXLZREi3SAv64X6xSdyAQI/Wft86MqEAQNf0g2iFb0S6ow9bmGSM5c+O1i5Em/XZnz6CmGwRbHiglMR5Abz/IudCpFlo8OFwHKq8OanPHiPtz0vvMonKI3YfzUP92EHitaNI90D2nkg5uaqcRn7kQXWg4I1yq3LQMrasnZUKSeMkLT5yD8GLPoOOgyUiTHBo3sF0zfG5euMDhxNnrm5gXJMlbzER6bGqOeo0jvJJkH30v5A90BIRDIDIZWxKrhuYF3j2PEeWX4e/H+48SY29JQQ3A8z8+d80dP9hwicND+0mc1+uE3QhqQRAD0qfEQjdA8HF2oOMXsJgLlo6HWPMxNdd/hXHroFVTa3yUG6yVpgQtlF78WmUHQKn3U/55+dWw/LJNaO1KQ71ZZADtYChkkMNh2ota2P8TlUuASXOkePoP2OnbfISgT6vhfyUrAmgZgU4tk3kKHbOClB99tBWXSKVjKkLTjY4KVoyXEucpiU6ZkWFaT9jfGkTG4K2lSegKkX1AbIBtDiScp+6T2e2+W7UbtKF4J/R0mOs6wZrxmX1Tj0Utd4yAdZDHxzimLakD3SlQG1Y/q+c+osLQITWK1pALaWaLzF2pge12y8r9dvej6ySqLSlEQEDUTAF8ENiC7WApnb33BHwPadiVkH2nedzssdBEu5GsZHI6mV0iykL2H6E7I2uMRdp7DxvbEiadeZ1JmpPuxMPQA0jv1ZixPCLXE9lwzOrnWT0+zLyqGvm29ux4Qi7XpxxiezGGacxE4qq4WZvdHeAQjss0zEPO/v9Oy60GoxUV0tmgdp2+ogMG6gZats0cJ7C274TE8b1Ophd13sJOppKUmCGksIvN6sziQ78IN6vO8VScAlIbDjiksxbgp+vLJb0u69QOgoc0B2bbFJMgS/Jkf0g/O91QEm0UvrXRCImuY/SfsJsJtJ1vJMyAtUL5oRZ9W5EXWrPb5t+l6ZQADXNQGrOhlE5VwBW3sQrEs2naUM6/PsHQvJZsnaSkLw0+FeveK1tEGv5tpDUUotTDBiq63LVL+KTKk/f+Wnmp7MDUAHYGYuuipvxnmUSFYJPkiWm63z017WMbqWlWRP3igaAbp4K4RAKTrk20JtxOAY5gG62x6CEK4Ms9g0b8TeQn9dvxdqrhlVX2Mh1BHSvXDpRJQddvKwol+dLhZFprmoYiLL0zvCsNwqY9By77pUPdX4SJHENlykb8GAdPGcxBdm4G86eKEhliOV5oiJmea7R36H9v8ufT+7nRugCGY3RQp1+l
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( List )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAAAtx0KuWVolAD7CzsupqIX6Rp15OhUg+msZszudHJYmXg8JUpIRpfADehZt/oC8B85ib5mfWE6J68rcpUpl8G/fE8nuZq3onIxIGh6xUV6Wyd3uTlEqOxX352OzzXl/er+4XvvKsfFrO6IcZu5bz1FULKtA++zICLYOtnQipg==
          controls :
           -
             name : BTN_COMMAND_OLIST
             identifier : 0x241471c65551cba5
             internal_properties : CAAAAAgAAABdQ24/zvggjp11SGeWlJDibhNGtOJ6XP1bMKARqg22PS7N2+CRO6PoGznfHjW+Gyu1dRvExaJ2lI369jW96x6hq5gjnlAV1S6Z/B72xc500dAehw8a9YX521SVHcpn12AdejkaaadVRQfNu1aok3404W4HXNmtcD264LVIKuorQ+X0vGG816gTfn5U0i8Oc3MoNM9pCEGfUPx1Kv26pPDLJsDuGougoJuLt98V1CANNVPKC0doKCNrhO9GroW7Bx0UPQgE2rsGRadFZQk2IHUQwq+wE4OG3i/Fg2A6QXj5WPuvHNaIf8OCSGEollWiN2ef0+qYiawvnR2kGR+pMhnpRe6s/jzzSzzyPu0C2JdS79WJh9UFEnEM+C2SgdaLUoTRscXZCNkfSNBiKY1oM/bvpR07pUPekMPugL6OmcQDYLpy46wNuoTGSPdTSgaCgP6GglKReU2rAk7A1CbEuNJChIJbxgPznBd1Jb9NfKAW69wmjcYBtrbbk8Pnnm1xrnuHPgiR8DzrewtLONW0ZrhaGuSqRIiR3P0C5yJoetWfeJvnRAYaNUDSrkzAuICSWcU+9I5VfqeYHrT3Pj+TMqJ445ZAoY5wFJSwdYoRs9dpo1Rj1Woy6VPhMVRbq7/4rDUm6d91MOIFtOC53GuL7mDkLnrmZxidioaP0DuAGMvCP3yz+Aj5pcnr/06TkkOuScBVTcLKg1FhaHii30jUiYhPy24M6zDrPhAOsNFn8uaCA3j+eIqGXJQQ5G7v+Xk+SOYvaNHY7pCD0b53spM4fqTEjePYIde4abhlJCsloST+5ExnK1JBdFMeyXDegBDXXP9gS2FFwZnCUxyoNGhDRUANMqVuqfqwHLC6uTqanyydOs3A5XLfHsUYLovHsSC3bKIdlgYumIafFiePQsYYuD/0R7Jwk3BQt7qqKCt0JpWNhUMS951leiUsbVNoL7+prfvH3zZ0sGLGQp1j/lRoq0/KAyLArjNNeD4D2Tz4qDh+aAJQO61IUIQTF/J9hgRgcpGqB6+/qvD15hcCXWOBnOHqwJpYuqPzbDQdcOZuySd5Bjub0zfuTNyl5szkYANz2GsUibFDxidQ1evO5sdr1RxQp8pttgWbpEJPT36OtGDE0WVWInOEJrtQksPPi68lZcE5oXKhl+r+y8d+6V3URIBIO4A4nWEg5G9QWuA2Aave6RlDIl2DB75HOBNe+rzNiegE/NhSvUra8a/vX3cm5WM+5I+/0cFusSSF6w8q/tNR0A==
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( OrderedList )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAAC1f0pWcYLtTH4irqv5+LWqrpURYv24+uvRa2OFFJ5Otq9JslKhpejLWjZd3tCst14KZ6FnELYJ+1JY1Xp1IHf3y8GGOuGkSKikriqlXeL6ncmiIiVu9xHjk8dvcYVjrnP0cp/+hT23B36goqJn09XoSJ9UT6AAQG72rnzaHg==
          controls :
           -
             name : BTN_COMMAND_BLOCKQUOTE
             identifier : 0x241471c65553cba5
             internal_properties : CAAAAAgAAACssKQHLhWAlTcRmmn9kcQzQqJvGt4oIIJoXGotDbm+2UYU77Lwx6finB5HjHEkAebY8+JOf1jxJWKivllntqocp8g/Y9DU0fjQX5YUg8Mfc9QvaUYuhsra06Q10b2i6qDyUzpwPl9WYI1hV7xEnfJMXSWJbiVxaLoI6og77WjdlpsSDt/yMfUjigjOMKxMqWWe3xALWSpU89BH0+eSikM5nAFeAaPOF1tmhnpI1tJ7VFe6zLqtD/2UBG4VwCMmfbveVvXOvubUcOtJrSNJZmYuzR6mk4zBzamH2neHN60JAyYV8JnSpKLDp/rnGjfn+rMHZXs2YohPRdqBDBObvHKeLk4/JA8NOER4SI7NKZPNZekMYJvS4NDY1qqklO/d3OJUlX0KmVYocCCGk9/j7MTsuEWn88pATN5yCzIebkKjqIXR1uyCgrqxaaO4oPcf6keEoJXH7A/CHXk2vWkCp3w/OGUHp4T39bkJX1aYZFqqFCvmnlAPEqQi2ZBnBOXLxnhJUd37PwKFTCC+Dl7+f8/0mftdgl6vZT7lSNmdCZ5iXfL5Fsr0ffy2SQUs2kJbqZQymFIY3rLZ5PBOBQMiGwvJ4b/p2rxVLMsPnFS4AffxQTh1ZJs8el9cx41kslZPcnZXvLBLqlOFU9G7K5Cy70gIfBZ7jMbEJdgOsX25yvhCFQHYWzsFH0CV+8ZKcporgrB5RkGuxepDePHP+9SBlqNUR0IYXnXHBuqeG8YO0G7yq/SYzXLvlhblrynOl+oHgg7b5LYpCzJ6G0oJsBd1dY0tqS87HK647nfSHc7I+go4WCmpz2XL4ttoMbHOwTwY/4Vc4npTgtm8YZB6VzsFi2niiHkDeIYNKn6gXV/qXpoqIiSHsP5kkEhVo5o6X+ht86TM85ymO8QB2XPfxZsulOVaIL/yAGGOmekp0T0kJDwnfibngYwI8bTGzljS5g2/yHZlDOZPCy1SMu05Bcsq58UXxnv8uy3/ElNlRtk5BDEYe31u/uwR55CGFfGSdfE66xoRw/FOshocSxBGFr09x78VebpFDSsoFwXNWES8f6MLgg/WkzspHO6JLZp0Bj1ZJ22CVi/BI2rUxVfO38+fxI6KKoYr80jpQDreCndqP9Kno7kEuAbFr5tPbukhoaYQDgaXvq51Rr4Ev4o4Ws1FJK3k1/HwxrJUeYuVLJg6stTsOG8JiylCoKbOGptm7m9d/buerf7BQ4lo6okoJn2jxJog1JzpLjR5vuK0LX6f8Adu1oZYlzW/bLcFd/lQ0G1+l1OkrgH6Sd1rJ8F5XusbjA==
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  SelectionApply( Quote )
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAAD6ofrHcEwfWnN2itrSVxNbqmKDZm96PV7YZVOCRssFXWyMFCu4qvOb6lHuKnDj9gSD6a/uZksKdhkIYZyeiFm369hzlMsj3rc2EfR7pXDVdIuVNjPlijZlWaGLcl1PRqS9kfCrpxkr4V5bFMkfEz1fr0xirnG6OUF7rnVDkLhktQ33dw==
          controls : []
        -
          internal_properties : CAAAAAgAAAD3o5Qzh4Oj9A8Ynuv2tz1tTYHoHdYXuhtfLgdYvpO90+gSkq3SRsWjbtv6iPCjcrZXN6H8rPdkrmX6JY+eAJUve9oBGoFp8NwLUFEIao0GqW40e5T2u2UyNmjgH/pMsxU8AG0sIOLyJpPgiXyKWBY2ZDlXtHRCyvARx/mcyiBcoBv6cg==
          controls :
           -
             name : BTN_COMMAND_IMAGE
             identifier : 0x241471c65556cba5
             internal_properties : CAAAAAgAAAAIuZ4bJS3mLGYGVfp0Hl829KutNUH+YRxF7aLt3bd3FADIAP9+DhvTmi3T6likUQkbgNhZHE3Ru6HjJACkMGwnc3NFrYQY70PWhk59VcWM/oYOXqfwrrii1l5RqIQnbtFARyCSzBwsLFaIKOS2CUzX9d3LPaCqyTNXxzEvOp3CabEBuxF5o7RzNS/Sw7KgBaM31h7C1gZIGiJs1GKezzBIeCpOq9TFNNAddMxuC4z72saluxyMeCPApdZpc0HZA4LVPEhQTe0TSRtBUmLeI57S49PrqfI3PSjG17bV0Yk3v7h/LsDmykoOxukH4C+2JqnA3zfu9Gw5oQ8lV8qMweyFfs4kYNZNYmW8rEel1KH2WK2NeEs5Cei+KtyhT/d9iNdc50RZtu4j6MLMf7TtIx/KYcfLHQ/O6vMoVD9o+xx5nVwWQ57mYeLpQSO9jO7UBjCVpDWDtCVQvEeqO6J/WVYM3ghph+7u05VgiFyFmAjWt8FoWKX++gcooHi0ekhHP/8mNfN77E+JbSDwjjXGDPlZazl/0e0nzTpW9ZMYiCjwTym9VH1uSPszNxKh9V+THi7FsQ3GKUX3aHtPsfdp4vU3Rwp25qBeLOjjO9f/ZLG/MH+AC6LpYe61+NzjlztR2rFmfPjC7L90SnjH/4tEt48knvnUlNMTZX9Vx1Tn5kpzIHCe2ZYdE+6LqYds3h5p96qPp9+f6MXwYrJPFQO+9I4qiS/UV9Oe7/7IHmIvFQThwpQ62e8Ahycj9bmdSbgztjNiQew3krjBlNtPnU/atf6jjjgS5NCT9bETVE8A1yvB7z20I63Ug1P0p4JSbVKCzsmLrF2XFrXXf3EaMlOEaPFpK7yeQhXOfm/Lw5/loVc+UTEBmRzKdFtkqnt2aiooIfPtkv4/ku3as/1XXmE1v0tmslKgRuIHGI4i/KHFwqTfPhNyIB6l/NvtMzaMlaudZivPJgjmhxAWUwjSRTQqQIMkeYHKTcwlZa5dxaYwCo+siKfNSukUxIXJjDtdSge0QENPTdPpt9YovtdJwAGY2g1mFDVLWg/SupbMbzYOdISMjKJt5KVuIGWL3Ilo/pS5okNDuHT//6BGES5dkiQh4OFmKnHpoLGm0ohEFfWYORI90bmzMyuhOgBBrbs8peTEguYr/wM=
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1-
                  
                  MySelf.Pushed = True
                  MENU_IMAGE.OpenContextMenu(BTN_COMMAND_IMAGE.X, BTN_COMMAND_IMAGE.Y + BTN_COMMAND_IMAGE.Height)
                  
                  MySelf.Pushed = False
                 type : 18
               -
                 type : 161
                 enabled : false
        -
          internal_properties : CAAAAAgAAABHsPa8qbWSgnTPQVDNRl3yB0Fq9/BGSAtiloDpvA3NS1cO2wHpGLCgfolbVOAscZXD0T2a7n0RpCoorfhYE++p/rCDEN2uzdZxBosyCypXP8bTSdEK0VyfwmHKmM9v7X8VL/oioefgKxFQKWXdI1Ik/bAzS1iDgMzrmPBTtNM=
          controls :
           -
             name : BTN_COMMAND_LINK
             identifier : 0x241471c65558cba5
             internal_properties : CAAAAAgAAAC3uDwUXI+pBq+a9oqo6slJ03MJAXA6Us0I1KmgFgq8Lt9DsXnC5O9uhccKxbf5euCUca7Z4uDOQ2KjvNt3D6tj8jAj/kqVVnZWBBxqMxHTyO8U2oIHk4BXOG/UMEk0HvlxwqCjZKk15ZcColuytAQQfsIciZnPSFbKvHWXTSQEjz+lDOvcnDwAwMuiB2VfbqOtiKHaItD/RvOAmhbxQ7ylOFll7qyifoKcPxXV5RLeL8zJ082ABsHUCV2+f8S5o5meln/AReSCGfoZwa2UjIGLY3lE5iEMH7i8T5NdhvAnJWnkwOPWBEOrkrkaCiD0NouNpdcsX5xnxELZPCPs5DereWYozqM3WNh55RHbmFPwLtUCj+oE0Rl/hdz/Phrg3EJe4FTK7SR7Yl/zoUaXRMhC6slNAoNOZWQLgEV2BSZofBNi3HS2HjY9aNVwjLLmX5DMuudHmZnThbavVl/FXZSdHTjXqo6xiDJO3tC/keeF/T6WamkQWvNl8HfIxLdz9idnei0EowWghX5nMf2Av7ZZPxXjC/wRpULGaou2mSlUxACTg7vrasPneeIP2PeeEY4h3+XWxZ8WHGg50Dfg0bGNP+XeUd7wc1reSxDC8YP4UFgxy/K1Qutshw9YImJjRzhFoNTqJ5ES1qRReGswgta0DpZdVerVftXiPoY9N6EKfKRVtc1O70h6yCNkBjBfKUoT0vn1tYWS8UYprc1FFxBBJAUJy1Y80qQm9n0oiFD4EANJSDIJIxAT/9/yfH1tDlQK7z+wX+8ZbrKc37N3mCBxqjy7c9d7x/JNSEWiJ1mna+7UGssrR6kCjTpdTinxP/lwXFgamOqWe3jElscS01vvrsJ/y6i49UcIKg+6pTpVwhIDwyENmsOTxFqCWskw/cUcx8sjQNcRmyB7/16oOelv3CHEoFe6YVKpKmkLlLd/a0LvrPsDmW8ZDjpTIjMMYmL7A+P0QagUFNtvWhC+YLGVxLKBQr+eaTRa/ta0zhQ9DUnQl2xQAibxU23LG32O9LpDvYoFKmBeURc+fPNG5z+BAFjUpIRyLnVFvmaWwjlaPhcNLm5m3C5cbsXZlkV62UOaaiFnaltVmaz8MBm1jf6/vmYj7qJPiap+neTRKF03GNnNiPjXxm7B6CIjaTWZDKKz
             properties :
              width : 42
              height : 42
             type : 4
             code_elements :
              type_code : 4
              p_codes :
               -
                 code : |1+
                  
                  sUrl is string
                  
                  if Input( "URL to insert:", sUrl ) = 1 then
                  	SelectionApply( link, sUrl )	
                  end
                 type : 18
               -
                 type : 161
                 enabled : false
       type : 126
       controls : []
       code_elements :
        type_code : 151
        p_codes : []
     -
       name : STC_DIVIDE
       identifier : 0x241471c65538cba5
       internal_properties : CAAAAAgAAABtoz6GGL2RKcgpZhIDahsz0nBGVs2iNN+Dbv/jjiv6cgs5eIE01bvmpJT9wP7Z+B9JEmKgH0XNYMsejqjxVTFDi/GHH4vEIR3PhF6i2G2PMLT8r4o11KSw+ID3js+cmx6NyuDT4+Eb5tRBtxCZcr+2eU9zYKSGS8cl6621TXxJSxZrhcEsXlVke7JrpRbUuB8Xw2KaL4Hf+HmQCwn9KdXCVYI3EBd6UYXzgUlmqfRw1pxgvgZ5QjVYPcBWN7TylQes5Cdz6/h5bJ5PGLFTngU0y88n6Dw8hyUSiu9U6kwFYgPRBzpgoyM3alqqBS+SB975m5fM+RQS5QW58WOuuDy3yCpt7LfH0RXNrNBUTorahcVaKx4byI97OIsCyM+3UA80jLBmg/dsayKyfvvWzclOFJOREzeYWh2KshIecr8Y7IwCAIMK6K9tHDSUrh5oVspj0wvuIZz+BXynkkFcs2xoy5y046qG7iUKN2XvbD16HW6EvJMcn4/pvqEoTXwc0SLJzR7kkJyIW5pyVUDzw8fJJbshTg1i0DPxO7GWJ0MG2ZHwiCdqQAT/CEkm6oLF1FB4WhmquORsKwAEzA==
       properties :
        width : 840
        height : 56
       type : 3
       code_elements :
        type_code : 2
        p_codes :
         -
           code : |1+
            // Version 1
            // Description 
            // Simple caption
           type : 14
     -
       name : BTN_COMMAND_VIEW
       identifier : 0x241471c65559cba5
       internal_properties : CAAAAAgAAACucvvuHqeVRW6ASxWGC5m1rxZgLPUaYmWCekcHQTmRpdq7nbaEXdKMR85+hU+5UJk5Z1zvwhzkmJaCgMANcfazFBNMQP4nNPdVxewHKZ9NCuPj5C+2uRGGS+v08GOIYkt+UUQcxS4l0HPFGY/8RDZYI6R/VarIOCNA4l3N0+acVEpIaQtpcgRxnUl2Kq5fuwuDHcVRKsZQECNLVAvr1MyRH4TIOCVxurdMBf6Ajx6saKzEegG9uymo5Fi4RvFeS8Ey2Gf0KvQJbnqCglNMuJ3GMRdxymkUHb6nFQoW0lHJvB2h4J8g/Crsa28vp/z32L+41Rzh3p2YUppCFEViPkuuqLx6l1kvrGDyg8eJMdr2qsA7jZWzdL+BAnSUO5C2c0O7vyGgyUyCP76NXrBBUt1iI0mh3ts1Ukz49KYFxEkXdVtAIxBcDvfY1SV1e6v6gXJkFYiTZGcxr80O+gu+zdtRarkDiS6YnmwqlDjOTyfkvRo9DF5TloKmCtmxi3lHQVoTLl1jIIXCUY+dhNIAZXsruwGFJyjkhkUqpyqgm1O1dHG5j+90IBB8oyamaTKGmOpwkk3B7GNM3pQrDYqZgZyq1fBt8TH9kJ9ZBRG64jcxh/0obYD9Uaejom/H/RyPndE0VYKeNhPcAY+RQFnQ1n91+4cmLvyYw1wFbyaQgmmSHW79C6hfCTG23tCFCNK6KdFtbdi5OpYT7jm7b/OuY4xqKOTf1gmHGUMMIfU6VvxJ4RG1dOoKQm407Qq0AqIUMkKtrsiqSC0XrK6EIzG9aujCKDh3ew9KWAvWKgukk2fx9QJ2ZeyS+6VviKZkL86lR7vMrssim1JSzQkp7L8TFuWLsr8WZgWtCw3FCZZO23k9ZKs+5ACmtEobws7qwCnr2pj/L6IWwS27bN4xnwsiGMwUW/rHU744JFbfmwSG+FuYYxPy0EGXb5r7wnJQivh9uctidDF0YIREwksqHGIOgY8ck8w560D/2j8I/nr4gAFeaf0l3jmMMzoaNpIavBP1C5SHf76Ddt15e7LUvF9m6xicMsvd8IGZo+o1P+wtKQad9EW8n4dIWXVRYqjHVQi0IR96ISH9AVrOenCQfqLQ2ytfMc7Lp/8VzG06xFFHkSKB9AswR7uwBJjqVL4ddue7gOKd//EccUBQf1OSGP+AgNTcBVl4UqBvGsMLP35qaIs/T+UUOsV+6PGv3q8eDlZBg+7mc9it8+GgFauyE7vi1ucNlpB/l/BHfIR+
       properties :
        x : 642
        y : 7
        width : 42
        height : 42
       type : 4
       code_elements :
        type_code : 4
        p_codes :
         -
           code : |1-
            
            if __MyInternalWin.PreviewAvailable = False then
            	__MyInternalWin.PreviewAvailable = True
            	MySelf.Caption = ""
            else
            	__MyInternalWin.PreviewAvailable = False
            	MySelf.Caption = "/"	
            end
           type : 18
         -
           type : 161
           enabled : false
     -
       name : LAYOUT_MARKDOWN
       identifier : 0x241471c6555acba5
       internal_properties : CAAAAAgAAACabdtcHb+7w2T9J9Z9eo9kou8Cy3beIaGTb68D7X8YVl8wYmfnTyjAIG9FE8/BJ0QAOD3Dj5kU5CunZ2oWgB0KbrNkV2vwTXVwglipTPnPd9gscSDjKIe/DzWU/rQbU9jEW9w6ZWIi/xphrsyU7AFd6RSdteJ0boIhPEXGA4IBGdejeDRzT5Nk+4GzWc5N2/TxTbP3sqFhblecKbXDQvuKxCkysmfogQilD9o568sx/rRF1/n+0Yp+3CGDGOtPO/Sc8p9zYtUwVnDJvWwzutLtS2lXelZA8WpMPXrbJmYp1LTepfE44mV5ggsiO8FdWPQvJ7l452ZLo8yGbwV7Y9rUPclhsxavuLQYO0jtJrtJ8Z4PA8KZCc8bKM5kHlwjTQ1TBci+HiXUyFPbSss7isU1RrHVFUOCb3WDXBX8zyxo/pzfq6EjfRn21rnC4CiGCls0RF9i3zyDkRAGmB7fFTaxByQoAjk1N4TxNsgBEF79tYoyhW5LxYWAevLkT7r7hfuS+FH5tyUZA8FAx3Qcrcqiu6AF7jvBaw/59COvrqcQUqLAnYwT3Myggv6WCtV0tKkBBnH0SoDuCjDZ/ehOAbCSmRCv4A4GAWiuZgtVvAljlt4SWu6jcKrCq64tKPhuqkqvM4Ck0wzep3Iz+i/DMcLoiu6nsBLNpLBOGjnkKpuOqwB5+7zWxu+xqD26fliYOWQKuOJh6ADq48xqvN6H//ePng==
       properties :
        y : 62
        width : 840
        height : 419
       cells :
        -
          internal_properties : CAAAAAgAAAB6wVYx0INITLbzvnvAGjbCiv0qjnyiLrcKq0QwNFCxphyTbOe5M+17sEOc+FcxqVHBWCMzlEoXNFFytjnkTo7usnW3oq+VDpDBxcfocu5YhNF/mUYFQaagfz5Q5VTFH7FcdQKg+HV2bPiRuzBjw/uX7KdzUpR4aV84mwvmetb4Hu1s8/Q=
          controls :
           -
             name : EDT_MARKDOWN
             identifier : 0x241471c6555ccba5
             internal_properties : CAAAAAgAAADFOomYKHXcNEg1VF2+HAZHEHrS5A0wV7peV1c2OtW1rkX3GwNKJcaeBSM6sRlZGjluHkazUbzDkg3mpXWu4OMN5aqDe5TRv2hJkteMTCvqCwOtk8ySEjz1/sfPumeZBsMTEgIZpytwz2RAK4J3NE51HPYQmmCu8x/iIKLZkc9knmn9zLA8kPRvgkXhFlj/0di48xCrFGYVsf4rA5bWTjk+5927nVmlXuBCY3JBQr+m6M7cHFdQqsCIMHYJbBY+iI88fgdSwx5JPSvJM3Hm4pTlD/KyrDJBkbPo2KzBoCvMhmOsxlWjl9Bsfgqz4R2jngScmZdFbI2556Qwq5mlzEAXKgYK6Q3/+AORuGoHvbkjJjsR10S33vk22Aqgd6kwjWSSXLSTqQHQpYVeRQvBS0DXrmdm20i+AvFiEHp5d2XQrZnFCgFTqUSYGxK4112inxGhBjoOnAJj7fStEUQTG6txUzjjd3VdsthtgPjccBQ3cfesWZkkoOqLFLkZ4gxyL3llQ3t+qCImYFCdlz+DhCsR25ddU9OiHV1DvFh47pvniMpQhwSyr9pHxFUq0ehy+kPMgeJxIWIs3ae9H6S/1i4Qa5QYTlnZgDETzyYC/P7F5MZURUU4MQZwa/PrTRueWD9w6FrqfbOSKzFJoUOarOlJA03pXbUl1XUmNn0rqJtyBdx0f0GeXsfsDqekWZTCg/3yOjLllbj+8N6vsJfuZsitDCEreTlHKOCB+4e549Cqd3deGWdm0/iSRV9INPekGwk8EW/9ujCvplTU4uXWzf09QcqZsL6S59RS+aa8S1bs3/5gLwRWkFkplPdmPxVvnQcB/w3S63w792bbWEh52CJbmXVIFqXD10s3ENIuR//bfFk1Aid54PB7os6GJYRpQtwDNaPykSlS59jkzQy/MpNrP9i4MHojXwYosl5fCV+dTbtBYYYPHsIxaKhJOS42ws/c1tPCgWfM2IlKXlfA/UtoROmtVJiMPJX4y0lqljmX8utbFlqIlVQ6C95izg4vT4597GwxzYjMoJ+BJ4U3rXuPBxm2h0PAaVtZ3u019QkEzw/qac2ASa0KBrsRRvh6yImS0/C11DR7ISFQzTidl31xfsTNVVcWxWWGl/gdM8vQyR+rueRC2nkdBqx4zrooXeg57y5kNqJyqXqJbJjWdIbZlZ7D1+j0FXFFtCoLa4Z0nEzWS3uaTeEU86uXX1k070guZbBzAVASdQP0qy7raN+12CAmNqagTRjnDw==
             properties :
              y : 1
              width : 415
              height : 417
             type : 2
             code_elements :
              type_code : 3
              p_codes :
               -
                 code : |1-
                  
                  // Default: No associated file
                  EDT_MARKDOWN.Extra.CurrentFile = ""
                 type : 14
               -
                 type : 276
                 enabled : false
               -
                 type : 277
                 enabled : false
               -
                 type : 278
                 enabled : false
               -
                 code : |1-
                  
                  EDT_MARKDOWN.Modified = True
                  DisplayMarkdown()
                 type : 17
               -
                 code : |1-
                  
                  // Asynchronously removes the space at the end of the selection
                  TimerSys(__RemoveSpaceSelection, 20 ms)
                  	
                  INTERNAL PROCEDURE __RemoveSpaceSelection() 
                  		
                  	EndTimerSys
                  	
                  	// On double click, if there is a selection, removes spaces at the end
                  	if EDT_MARKDOWN.SelectedText =] " " then
                  		EDT_MARKDOWN.CursorEnd --		
                  	end
                  	
                  	// Special case for color
                  	if EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - 1 ]] = " " then
                  		if RegexMatch("<span " + EDT_MARKDOWN.SelectedText, "<span style=""color:[^""]+"">.*<\/span>") then
                  			nEnd is int = EDT_MARKDOWN.CursorEnd	
                  			EDT_MARKDOWN.Cursor -= 6
                  			EDT_MARKDOWN.CursorEnd = nEnd
                  		end
                  	end
                  
                  end
                 type : 66051
               -
                 code : |1-
                  
                  // Prevent WINDEV from handling SHIFT+TAB
                  if KeyPressed(VK_TAB) _and_  KeyPressed(kpShift)  then
                  	_EVE.Return = 0	
                  	return False
                  end
                 type : 65792
               -
                 code : |1-
                  
                 type : 65793
               -
                 code : |1-
                  
                  // TAB action
                  if KeyPressed(VK_TAB) then
                  	if __OnTab() = False then
                  		_EVE.Return = 0	
                  		return False
                  	end
                  end
                  
                  // Checks for characters to be protected
                  if __PressKey( [[ "\", "\\" ], [ "#", "\#" ], [ "_", "\_" ], [ "-", "\-" ], [ "`", "\`" ], [ "!", "\!" ], [ "(", "\(" ], [ ")", "\)" ], [ "{", "\{" ], [ "}", "\}" ], [ "[", "\[" ], [ "]", "\]" ] ] ) then
                  	_EVE.Return = 0	
                  	DisplayMarkdown()
                  	return False
                  end
                  
                  // Manage [Enter] key
                  if KeyPressed(VK_RETURN) then
                  	if __OnEnterKey() = False then
                  		_EVE.Return = 0	
                  		DisplayMarkdown()
                  		return False
                  	end
                  end
                 type : 65794
               -
                 type : 65796
               -
                 type : 65797
               -
                 type : 65798
        -
          internal_properties : CAAAAAgAAADTXadxh2Gxjd8hh9F4H30stoWYiBy5jzqcOTKUqlF2mx/C4hqW2uO6ZEgIMRn6bpmbn92R9vDAXhcSNuDFhDNmsH51Yvjqh5Kn3H6Ww3aay7HcvPO1c/TZVFrtGW+Tl2QG7hW9trnU+TVNjuwIPx+GnHDKo7o5ShDBw8KbiGF4ELb9rvt9L6g=
          controls :
           -
             name : SC_MARKDOWN
             identifier : 0x241471c6555ecba5
             internal_properties : CAAAAAgAAAB1xiGiCfHs7Uqc3uk/CaimL+Zx+Wz+pCN5+ACsvp1QGg2sDfmf0U5GZqcujxJt6BN8XHcYeRJtVdo5Ikp+1y2TCCUqvCwCNO2jtFo8HqlHpYZ8pONh00dVtzWRDr7Eprcw++RvuK4Znb6RhVyhbF9i1Xp051JinnsV6xblubWGVpRVwOIT/ccTW044ih08r9xTHryN1fhKy4mx8KbbWULkkzxqYFttNuIuxiSonAzREHw24tur7ZBycUupTBlptGI61svN933ZYWK7moyi3jcE+DsaOrisT1i8spovPSZ7x0Tg31EIAFD+XgWiiKUde12Q/25X2IOXWdH7Jb0S6X+RGKKfaYWnrWJ0M2gVO0AhgnGtEIt0krvmc2s+/qrJVb9g2wY3unplL00MGW8cIUdwbOIx513FvUwH0thIfQhUTRMGbEHh8R3HmwpRJ7WmPHmQVGa4IxqVayxYCUIONefRSlVSI5/1Q5KggA46nph2vvDpfV0XvH+CH5tg8th3KA8leJ+x46SfvPajWrEzOl/eyFyvOSX6iL/dI2o/0J8Y+fG3vZJGvzzyrmtSBpZfnHT+SnLUqMznXZSQosSNqx2DAbZa8+Vydrm6no2/C27w8owAS1kOrrwIKVQpUw/kurCiUT06a8TeVgXUqAh6MzCOZDt/8dvR6kmWihtPqKm4aA7IBO5K
             properties :
              x : -2
              y : 1
              width : 421
              height : 417
             controls :
              -
                name : STC_MARKDOWN
                identifier : 0x241471c6555fcba5
                internal_properties : CAAAAAgAAADJoDY0ffnBKF9YXvn4jweHzY6xTWw9rRkhYhc1dMCworGjjdRo5ZWP5QVKzOs/y2Bm0SI7LLOd2nlg4VlqbZANY5V7E0vfOLj/jKJ2li5spbrT3MdntVrEl/HK4qJw3oCqIXHGZO9LRxo6MlMTbO2w8RP1yN6ZlUW4VwpqQU8+3sNue3yxFyVMi+EC3dR5m227e2D6Vp7Lj2leogZ5qyg4qsFfp0k3/qBqXB3Y1B8DXvNdf1X87WjIHYDiJgd0fHigFt7rG+Y+2pdfS8AKpFEqkeFYwNQo6LBQfNxnUT9GbZIDBpqb5sv1wsIv0q6lKSzK6S97a6fBLs23bskEylslyUo2IOklWxu83N3TBq46kGCP7hIrASN6l5kh8Uuw4C1pLxRI7vN5KfO1kR7jaxrcUvoBryKWc17qZN/obmC8/9JEVG7F6uvam1NpQPd/5xRC3ruOFWxloSB25btNCTEymToJ7xNctV9SAzG1JqwiiG7WIfczskGSdmgYjsF6RtwsK3EN1VGS8ySx9xRLyNVZR7K/kdNZPCi1R1K5UsQ+
                properties :
                 width : 421
                 height : 424
                type : 3
                code_elements :
                 type_code : 2
                 p_codes : []
             type : 40
             code_elements :
              type_code : 34
              p_codes : []
       type : 126
       controls : []
       code_elements :
        type_code : 151
        p_codes :
         -
           code : |1-
            
           type : 14
         -
           code : |1-
            
            __ChangeSize()
           type : 65541
    type : 32
    code_elements :
     type_code : 70
     p_codes :
      -
        code : |1-
         procedure MyWindow( gsSourceFile is string = "" )
         
         private
         
         extern "KEYCONST.WL"
         constant TAB_SPACES = "    "
         
         MarkdownStyle is énumération
         	bold
         	Italic
         	Bold_Italic
         	Strikethrough
         	Color
         	//
         	link
         	image
         	//
         	Heading_1
         	Heading_2
         	Heading_3
         	Heading_4
         	Heading_5
         	Heading_6
         	Heading_None
         	//
         	List
         	List2
         	OrderedList
         	//
         	Tabulation
         	TabShift
         	Quote
         	Code
         end
         
         __AssociatedTab is Control
         __MyInternalWin is Control <- MyInternalWindow
         
         ExplorerAccept( True, EDT_MARKDOWN, procedure( nNbFiles is int, sListOfFiles is string ) { 
         
         	// Only the first file is taken into account
         	sFile is string = ExtractString(sListOfFiles, 1, CR)
         	
         	// Loads the file
         	Load( sFile )
         
         } )
         
         GR_EXPORT.Visible = True
         ModeLight is boolean = False
         __ChangeSize()
      -
        code : |1-
         		
         // Loads the provided file
         if gsSourceFile <> "" then
         	Load( gsSourceFile )
         end	
         
         SetFocus(EDT_MARKDOWN)
        type : 14
      -
        code : |1-
         
        type : 234
      -
        code : |1-
         
         if CheckModifiedToSave() = False then
         	return
         end
         
         EDT_MARKDOWN.Extra.CurrentFile = ""
         
         // Assigns
         sMarkdown is string = MySelf.Value
         Assign( sMarkdown )
        type : 43
      -
        code : |1-
         
         // Returns the content of the Edit control
         return EDT_MARKDOWN
        type : 42
      -
        code : |1-
         
        type : 2
      -
        code : |1-
         
        type : 17
 menu :
  name : _Menu
  identifier : 0x236cce7a025ed832
  internal_properties : CAAAAAgAAADczozAuySBkMAifIkConN/5qn0lAqCOgMYUtjYGnfky++lwvX/eyAh5Zg7K+Rm3PqyjbPR45vk6/4Bb61GQxq+DhwZzD8qd+21cvC5chiHx9fjwLx9Eg4oObGd7em2sGtLo2tc0wtErOJ33P8JHSxGu4UvAlDgSis2w3aycW/29zX5d8a2znInqS0CvGNsn8X/KczosssO9faBE2/ldyzXqu3w4gn0kIQMVOawD+KNesjlv4ly2ZLsPiCEs23QheH1gkNI545Sfn9p5i5tGNDBN5eqDCzM9TQ=
  options : []
 popup_menus :
  -
    name : MENU_HEADINGS
    identifier : 0x241471c65560cba5
    internal_properties : CAAAAAgAAABBYVs+FYV+T26Dqk9scVjAH4LgIbaCuTFlhOdvtIPl/dmIrsAlY1eFl5eOiE/OCzS+Irr+9o/aSUJ2/EjNPL4XEx9+o6LUjjaWF/01+DbzPYdnaI8TcUZuPvRIEaZWtZQ339FOZPU3OLQdt+pmuNIKVgEmQbuKpQcL/iLS527MogXpoJAJ+iKvpslOQOxuTtPdB3GLThd49m8O1eU4ILhnLmFc2iQaYbYwqNtlCEx66Ejj73HwP025lnP84e0JzgCxjou5uS2CW16n9sQ1NHyIcFR0NveDlHXi+KprIcqo9LGAi5KYkbS8aYlX8GTT78BeyPN1ccEVLyrO2NHS28b8gUsaSpqD8C+FkAlYndsNy3EoAOt0bqSeUJUPQA5uB4VgnphOT1a8FVaPkMxMUyrPAdhzlKLiC5f7Vl+HVySMT4bbzwk4TIBu7mT9AiKVsf9Ao1kQ5b06
    options :
     -
       name : OPT_HEADING_1
       identifier : 0x241471c65561cba5
       internal_properties : CAAAAAgAAACcnWwgO6vASGqK3R2brpf6+YFBtMJDfMVQXc5ZoRqiufNOftDQIW6S0ivJ9yxYjIAvN7AyCbmxmLmjokBIrWrMBI9aig6sa0EvtnSUiPRCnFZpEOEGlc1/em1jp9ry9MMCfXpdH20Jp3SWUk20Dsyu4xnEx3eWM9ehF00F8S81jp0FWpA17FVGUNoNA8AYZNpAp/9A0NAfdXZ/JckuoQo8z8s/fcssGQa6STFKKTxOQ7QIqq/uParr2/OzIoI5wgvQKO2xeTHFqHJ6ewQWfu4DqMRK5Hws6hL+q68rQpCQJr26HlYKKKt3jxSf0rl+uhZ+wzRrU0iwjLcEVrc8qeFSZzD+bBM42l1nIWeC1FajiHvLaWlNEY19ZSEkkEtWZ8ZWnij6lZ7fpeLRQ2pOwIkHIITB2SoE0/UaP2OG8+0K8FWN4zutyqVMiUNKl4ULLWEk9JFm
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_1 )
           type : 32
     -
       name : OPT_HEADING_2
       identifier : 0x241471c65562cba5
       internal_properties : CAAAAAgAAAAvLJ/e+tVZkLW0lh04lhhUmQlGJ4KC9VJtwD0E3/cN7fBvx4kjg2Poxuh/uoj7EV21W77e8j7snXWUo7WcRA/KpQ1R0CkDu/pzaYbnUeUvcNs3BnPw7RHroXRc+P+ixV9NviNGAxQz4/cDTsRtgN6z4Q5v/Gyj8wlfgmPcHEth7YsDRNrBembL54kGYV6lyQvLdFVYD8mxBWzorC59d2ZDi9mJbn7A75gEz4dcYgv1id9FDSOEGFUDbUI+AC8NuTLST2QMyklxzZiwIFOdYNxRHpqYRjBwdl460EVdhFYJVCWEoXvWbCGF6B279Xj3t4NYYxDkmnreh9KbExa6+uKV8ElwKhGqYuX1QAu1mmWOpUvRU+7XmvV3P7n2dtS2iaC/Ie8T06cVnUqGZy5OuO2LqnYrPXNjOJDBbirrNCR3A/behbRc+ueB8K+ulmQrGys1hSLV
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_2 )
           type : 32
     -
       name : OPT_HEADING_3
       identifier : 0x241471c65563cba5
       internal_properties : CAAAAAgAAACDAu4AxFT4SZGhH9ICNSOo1kbYiNdOdsGsCz+UEO+C3AMIv3IwjADA2c+lDuhAYNtoD610J4/kks2p4adNIWFSETTGmIObQNKE+CupXsyBvcFQMhsae8SUDWPtiZHlDsc4BgvyEUhHc6gSwrv8RlFrJfP0mS6vTg14AGhcAkztqNnSpLqzagxwGnIfkTckOcRXU7n+CbBsMsrZi2v5oA6GK7HMOKwjINHzUJM9a3aie4688LKt3WR4btwO40iEMr+asHEXqNRrOKtG6TtjTZ95Q3eiGX+tHNqVHJlY4RVvcDv8NM2FTT/Nxa+x1XfJY+kInkoHugIBfpZg9nYeq8fIM0E+xnH+kdNoNQ1ZUUUzs7Eaxbgb2hYY0MaJCthmanVunf80z1C/L6OL36+NgINqrOgYIt7ULD9Wzg46hT/UzCeLtbp8r52vKXEs5X7jj2u2cg==
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_3 )
           type : 32
     -
       name : OPT_HEADING_4
       identifier : 0x241471c65564cba5
       internal_properties : CAAAAAgAAADrasYoPH0l4ODCCiErfn1aea1H59KLj2wTqCYm7mUArl0+QQOIe3xl4ujMSW5lxuuaiaXdjAyj3zLzr7te9IHDSBNx/ll1OrNy5wB5Ox1fZmb4gtoU9bpqA2AzCj4KCZ5nR5b1vuVk+jGmVcYt2EthX/3W6ddhj1O4oPxCbG/EL7HGWP6MQ8lnQWTmb0djhwYRC/dcoQiAGqxtrbnP9s7uG6MABK4Nn5GzaFt2Eq99IGl9e5fIuidR6Tn9NPvR8didLfQUrQ/w9O8UIcMVu6lHhcUSOV2PykwbbmOWJ98dwi1edpvb9/VngP78uuBwGgo/acEgl3V+4TXB1ZfdzKzLpFJ4kx5BH5tczqNqC2APmT3ez5kkMXk5M50Ii10RxsdA70WMeaYJgT8HlTvvXjeOTBwAukpYyENA/jzUvecqjmH/eHTMHw0bewFChxZ7d1OeWg==
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_4 )
           type : 32
     -
       name : OPT_HEADING_5
       identifier : 0x241471c65565cba5
       internal_properties : CAAAAAgAAAB3vbunCfGzzeR2ZsRE6H67GTo0kAS8tAVHIpPFfH3NeSzeF6JzKY0N3gxEEDDQrAWa543n/CGt/Z8yVnNXann1kRcnPG4tzl1dQj3Cx68qoW0lfVa7AkriGHgFQE8pBoSHfKbZVyC5Khms2bNxdaxo9stnQIl4OV/uyXqJHS2zM+k1SHIH27+bRPJcMhZEWzf5DVN6cSSNQB1krXaV//UMuldffx5GU4dOs7+swM6mB+gAAvbySpG0g/1QOgfZ686V/RfAbcbsoqHfi8WrZKpLVKYHnPOKWNwrLIUOXeCKl20AIPs/S1CP/qewnGsC3HTwgYEjUr4YfdtBeBP956ci+DYYHPtIH3gFMQLZ/Wms9BqQ5R04fI2Yi05YedBE4cVJwVjF31r6ZBqk0Nzqlx8VbMzKzwwX6DCcJZDeA7jXtYjSxtkgVhDo2qFMdlYJP9NfBuJmgAs=
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_5 )
           type : 32
     -
       name : OPT_HEADING_6
       identifier : 0x241471c65566cba5
       internal_properties : CAAAAAgAAABBt7WVE2I4WmHz4UHTkYkm8uPn5/nrdwRSHTyzFoPvH/o83cwJ54PLHMKKDtpmZnMITcuBShd7Yz0QJKmxWEurX911NtSr1rWqPyz3mmh9nHbmVPVsQz97cbGggT62WcfwhdmQMIGWd/ZJ9JjoGdy0miePoIn0LRdqRT45xeEb763xAIp/V7NLQO4gogYIoxNdmUsaUfDxAJnA4aZt++UIFjuPbz6SXx+Cd4MiHmSsCc4OGDB4uGd6qWvukH03yWiL+x3SE2yyaGctmTPZSqD9cpR1JnkI5voxIns8Wxaw8UNenrW1mW4ddO22Uqf4oHhyA4EzUqgM8Un/Bqm1cQ+CpmTMMC8+91Av4+QbGW9qNiyyD6vmLhs2ZdAq585+F0db09Kz1Zw4IvT2Qqqw2XW3Li48RdIJJm7ev7rU37rjAUYgkr1U9LB4VCvG/NKPs0fR8NR0dh0=
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_6 )
           type : 32
     -
       name : OPT_Separator
       identifier : 0x241471c65567cba5
       internal_properties : CAAAAAgAAACWwGBNd0uBBxCls5IyB6WqX9EjMEdSzid2h3d/l7y/tK78QDk+IpAY4/W17+vUFg+rMXt3Ua/yic7IzlWJ4GADSf4uaG/dlZItPMhgUU3yYrvHkODC4PMZA+lkOsUVJ+H1VnAVDmtCNN5qD3QpkJKe7/gvb9TbGjlGyi2CFQ7M7TAgPgE+tDMwz6EJBbYyIyGQo6wdrJaXu1MidD7v/ocNb4uhHom4veCo+4jd6GXcMXurDejy2sbFn82bOr9SaK7NbHdsFOTKT1HBd450BBoawYfiAHIvvXDlUHIMcG69qqhSLAN4vx+6VtbDXkxPIfXAw/CjFr6m+sQrUYcJlbqZpXxs3yqPZtdgiJLnXBUgPQVnHDZraIpwIGharY6kyOATBx4HkUASVn7h5Q550aBIgDZduL7Yn89JhVBP
       code_elements :
        type_code : 26
        p_codes : []
     -
       name : OPT_PARAGRAPH
       identifier : 0x241471c65568cba5
       internal_properties : CAAAAAgAAADpBcoN/a3tVxSPvR4QnJNsKWI/Pq8Zi0wEIcr77lsk5hTyiMjGzRDZ3JU6X1tUvVAHeIGgzpTb06n3blKs84MFgWYs+o0tiP08Ihdfy3SzlatLU3OQc+aUQFiFJUK9ChCdSbs0rinA2kPSfKehbcgCv6Kf3YLw3FAPbqPxQb+wxLVx2y7U7xhu/23DD6fUId/lwu9n0RsOE85tASaCKtaHY1a+VJ6CJT30H/on0Z/X2+DzCzRpPFDPh6Iz3GkmCPnZgjAFq3YOJ3A8hDrfmu0ud0wK8kxrQb94l3LRTpqBk6KSw5Jrz2sfN4ejpvF11hz2UnswcbUl+KpNfXJNfDAV2bloCpT73X3uAjju6U1uHHi0cIjgSAejVELNJQ0t7vkNSsDe8CaoBCQrmvrU91z4Ay+malGo1C/gDqAaWj0=
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            SelectionApply( Heading_None )
           type : 32
    controls : []
    code_elements :
     type_code : 26
     p_codes : []
  -
    name : MENU_EXPORT
    identifier : 0x241471c65569cba5
    internal_properties : CAAAAAgAAAAXSSrDWD9+kmnO0sKYPuykpVJyCxE8UsdzZG+oO6vikAizo/xEH/C5hWhSjm5nD8wJC20a9UtAGDNcLoTzOTtErqg9osmgBak1FVbpKS+8T2Kxz+vC/yzInK+Z5Ae60pZdy5MCVTwRp6MxQmeEM82sogk6b8AFJcrKXh4pFYSJq2T9GlRJPvvVgR/+ohQK+Nk37p5be9aUpPlP1aDvy4EimF9aMI3XP8+4LB0lHId3dB0WbA3EYE3jJzNl/HT/XA++oSYqy8msqrUYIPD+Ea2R/G7AtlZf5klF0/SXHI0BiAAlo9kryNykq+h0XH0hfqkhRHl0IDD30/+VvEzBv3ffBer3vXKhY4eV0whogzgE5KhQIuBz3Ry5XNawaeRqfohoS1JiGxtccVbwcZH1peRymFOD5ijzTOJvWC8SGk4xfEUnJv+Dj/o7MWWWyGw=
    options :
     -
       name : OPT_SAVEAS_TEXT
       identifier : 0x241471c6556acba5
       internal_properties : CAAAAAgAAADjshiVSkNAHCKCDDWQ/63EyGeAB5X4KPvVIAAVnHkE+lwv5pWwWKMJTmhih8k/vkBZk3Wn3cfzOYMjXcSdVWZwNeByY6Yqa9YeKzhBpmciaIAuDXaWcKN9hulisH58Ry2vHdCCPX3yIDht2ftiRW3ZTbJGPi7JtqwqaqkM5o0UOBSXUSH9gYS+68ojNo3ULEjZAZ1BV0bwqQb/gYfwdA4kBmIradvbYs/bKDKwVInUqixVzMD61Pd6P7yST0VAIMH/TFUCB7eDcd2fA4kDGItIdCB1wr3cdts17BWkw05B8jmsVbBniJHdWiGxvce9XrKu2eevB/tprK9c2hz9XUNq7PnQ+BXkSTiJZeYwjDvFpK8v6HvnH65IsJvVMKGjqiK9UMYVvKLLhZrjKNbGrNBBbm9eC5v04jrUTHngoRX3r5ZQoMcahQ==
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1+
            
            Export( iText )
           type : 32
     -
       name : OPT_SAVEAS_DOC
       identifier : 0x241471c6556bcba5
       internal_properties : CAAAAAgAAABNGNgJu3zJH8olR72LNOskLKp9lVVfJw195Sr6IawhgLYjQmr10PGqBg0Z5YzCYIQ0Eb5qf24MKAWmRGwan2lV1EGvjQ4HAwYWyjMLI27zNro1OdUoo6Jg6NPnCUvKfN4mfjztuiJypwd1MTN1JD04P9FtAkgotr61THLuoEdkaSf8AyX/QzeqBQIFgea9fPF6V8UFYFUCjZo6C/eheXoFstK+KuLM6wOP5q4DFVzQ9iG5lmYtS0RM356+iLY62P/iNU8/ZUoWDB4yPcyQSDHxc26pavJyJCQrsyfvQGXLVgk6AOKnr7gmmjU4sIOymDSOB5KX6F8Xjk6dQg+/SoJvnj75G6RDoCj1adgAMCOAzP5E/VsWB6w/izZGkP48858uiL1tz5gzC8ww3eQPwyGB/wDD/02D6rndxXiKam/CoAzOlfaIKqBDQmeJAg==
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1+
            
            Export( iRTF )
           type : 32
     -
       name : OPT_SAVEAS_HTML
       identifier : 0x241471c6556ccba5
       internal_properties : CAAAAAgAAACShYFkSqhrR9as8u4Lrb7hp+HO+oQQdf3yWgKrRUxhH/FPuC27e1dXFbpVtIJeXsrscfEVG0hU7R/2cDK1ilypK57ILpIT43OcYnNfqQoS8wLQCJKFSA0eFm/nq4re2+WEJrdcwjE8+n9bwVeqf+loU9j7HkBxjbHz/2J873oewHMpjGkitnfRLovNDQTjmOcIahQqVisOEh8CdoOL9LhsCLsHlGFUQRrIlWC2o7SOFsV3pqN4t3r78WzCXdvNDmkqvlhuX7AlnJa6uG1n2rZkge9T7ryJONHk8FvRWutPs2cG/UMiSXWVXPyLuO+nJHunFUvvukW0XXtSG6oLFW1D/nJTPA4yKaqWPsOB11+gJyN6BrLqMfXjsQ+hNeEW3UxKSNg9FbUaEdFbg4Zcgss9h62lJ+I5WneKfZY+48DQlYvgiQE1
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1+
            
            Export( iHTML )
           type : 32
     -
       name : OPT_SAVEAS_PDF
       identifier : 0x241471c6556dcba5
       internal_properties : CAAAAAgAAAApfj13uh/f/v+7aeolgyrn4hR8NUn7JKFtB9ByIisIX7Ra5IdajITsZFq4Z87HhwZ7rOEreqMthJkB6JCSmYnK/BNYgJ0Lwx39nF8xoSx1Gksc8fN59Qta8i6k9adaH+wT+uvhvY7ljoidYnf8+bUZbnDpp3Sm4dQjHvK5eTUL6Jd4/D2mhFdWQcjsqELAG0q/z2aLz/i/v3tM4mfFhH/4whSP0dx4aaV+O4pM3zXWCRfSHr3PB+iEh5M5j1LmP/j7Y4y1rClYTutZ9gEIjs0YlQRCbdA5maIXkvRJZapwk46fOHovvdhG47S0mdk9O+X9UYa4p2Ecu9JzHM6WyzBnDXdFjDSs9ij0Bj/TtJz2mkbdTgoAxIDDcSyXYIwZehTszqLFFOR1jh9Crbg491tIov3KedSP88cvICg=
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1+
            
            Export( iPDF )
           type : 32
    controls : []
    code_elements :
     type_code : 26
     p_codes : []
  -
    name : MENU_IMAGE
    identifier : 0x241471c6556ecba5
    internal_properties : CAAAAAgAAAAE/+g3UNkGKkypvpGuOPcTt7r5pt1s2fUwar820oWaCzH8q3v8O8lAPuH4rew1nTMvlGD2a1tbpPV6YcvKAhz4w5Y+Ao/F9MSKel6VZHGt64L+KkXQJ5Geq8cMIcBt2P8QXXP3XahdCT9yE2/HNN68ggkR7IJr1UrTr0lUOHcrhbGLdmIjEX8NVsyHj4OQeItpOczrFSZeTZ72xJ1ebdjCFUZMl2JrdNQ4rPTijUYQgvJ89yV+ItzDyKi7pZsLum/+wlxV/g2BtQN0sZPGzu+DW5vwFhDQfQ+WPnAtYHn+63XF+4twDj2tnbfPl/NYUlSMZyZhI31Z0L1HVnc6qr2gQmgTLEWXVnO96HKXZ3rlyTo20drhdvfvLaaBlmWMHJ+jfWMKb+xHnfdFFRc3g5xCk8cig4e3zkb1EaupyPDLVSbJcyXz/MgfatG8nskI8VtIXhC42tPgC8Bs
    options :
     -
       name : OPT_URL
       identifier : 0x241471c6556fcba5
       internal_properties : CAAAAAgAAADVOqnDlgbkVxw+Qu+0ot0iNqlBziIKR9ouGJNBBp/Eosd9Hzzg1/jJ/sL5GoPne8hsah2vJyIwI/H7u4GT2A9iGr4U6fM2Pvphk/25xYHrPE4X3kAun03gXhcdceYCSQAiLMMsg6b+qdbZPNlDggsGj/9FaYKlf3h51TklR59acCfJYu+yxLKBvF6ujnwPodfRgeNtbwIVXpCdCTeMZeGM41EqhRuomHWKLvtAk2/Tw452cZru/nMRMImMkwzF0Z8CDiT19Ocu5DUZdF0NTv9xuxtW44AGw7xewt78JfO5L6zlGV72Y3pK2f5Q0Omjkl+66FMo9kHM6lU9vuKOoPiGqRm/aeCVnnKIPiAEIYVEh2AtXumTjJTGD287oVe20xN5SytIr+VkH5w/ubSEmblqHqNGx0ITf3Ob3FQ=
       code_elements :
        type_code : 26
        p_codes :
         -
           code : |1-
            
            sUrl is string
            
            if Input( "Specify the URL or path of the image to be inserted:", sUrl ) = 1 then
            	SelectionApply( image, sUrl )	
            end
           type : 32
     -
       name : OPT_LOCAL
       identifier : 0x241471c65570cba5
       internal_properties : CAAAAAgAAADWPYKJdms5Hp/7Zrl4kL3Oe8iIoCFDqk0R8l7WhQ4DXGAywjKOpgET7r9He57BxIwgMlrHHSL3S37VLbfwgea5/9Yo5Y9J6ct25vBSkimvRKvrMUFyknmZ/dS+UZ5YqNLZBDBPuTFyWZFgMc/YE0C7AqMQ1RRG3A/J8Zoq3O6F/4XBCO9r7b4VuP4E5xlx2OSQ1I4zr56GdUfp0PKLgfVLXxWjwcsyO0xkwVHX1xNNKMu/WhIAdjDQKgWHbOdyJZRcRVHzJ+/G0RFLIBpkqW8noIGcAnmt6KedSBA3UgZ1KF1OTkmFgGqNDdGxLkMQbJndKCffss0TlAb9lqDYb2GBYeRicxasZ3VoBanpN6aGFu3FvI4zb4Dg4Mg/FPAM976rRs/rH4hAi6ebnO5+C9De5faRMFlhV/kPE11peNLZWg==
       code_elements :
        type_code : 26
        p_codes :
         -
           internal_properties : CAAAAAgAAABBCFPbWv8CnBZXbCSzpODAYUvah738hvq3Be1hTJI2kOzhjIQNWDPdFHOecCe6zlOk0zDNT6MJR8VQr8QsG89J2Gm6VAnZqdEKTln9tmh4N1pChIREa5We4O56Y1AsGJqIB4md3a2bdElGIqZ1z8QgkO1iYhqjabERCWTtGoz2
           code : |1-
            
            sLastPath is string = LoadParameter("markdown.image.lastpath", SysDir(srMyPictures))
            
            sFile is string = fImageSelect(sLastPath, "", "Choose an image...")
            if sFile <> "" then
            	
            	sLastPath = fExtractPath(sFile, fDrive + fDirectory)
            	SaveParameter("markdown.image.lastpath", sLastPath)
            	
            	SelectionApply( image, sFile )		
            end
           type : 32
    controls : []
    code_elements :
     type_code : 26
     p_codes : []
 languages :
  - en-GB
 message_bar : {}
 actionbar : {}
 code_elements :
  internal_properties : CAAAAAgAAAA43TXOxtV40AdLwtSUrnrPcIb7bsGkPEQvokqHQWcHCocZ3vaM/iDXhCqZZNwfTZ+CmKbuUj0/v8rZL237WSzuJ/ig5gnToqt60g==
  type_code : 71
  p_codes : []
  procedures :
   -
     name : SelectionApply
     internal_properties : CAAAAAgAAABxJ137TAatxnvb5TNtDZox0pNm7qErdVU+ZYBohzW113Q8Q1mU0uqvuE2xRHrcvOe+eE62HJrCsRsRN9N+gAeaNZTD3Mmn14PTOiyIJhrrm0GVgObtKDxJOib65K/D5DH2OIVH3zdt82AJigt1ub4ZBajaYa//WIqM7xJzPLe9QYuOrh5D/I2I+WAlVHtUfsERXMp2owfEECQAxwRQhUHDBMwQUhjv1gMEGNA=
     procedure_id : 1446906475661609893
     type_code : 14
     code : |1-
      // Summary : Applies a Markdown 'style' to the current selection
      // Syntax:
      //SelectionApply (<eStyle> is IW_EDITOR.IW_EDITOR.MarkdownStyle [, <sOptions> is string])
      //
      // Parameters:
      //	eStyle (IW_EDITOR.IW_EDITOR.MarkdownStyle): Markdown code before
      //	sOptions (ANSI string - default value=""): Style options
      // Return value:
      // 	None
      //
      procedure private SelectionApply( local eStyle is MarkdownStyle, local sOptions is string = "" )
      
      	sBefore, sAfter						are strings		
      	nCursor, nCursorEnd				are int		= ( EDT_MARKDOWN.Cursor, EDT_MARKDOWN.CursorEnd )
      	nStoreCursor, nStoreCursorEnd			are int		= ( nCursor, nCursorEnd )
      	nDiffCursor, nDiffEndCursor		are int
      	nDiffCursorSelection, nDiffEndCursorSelection	are int
      	( sBefore, sAfter )											= StyleToMarkdown( ( eStyle ) )
      	bBeforeRegex							is boolean			= sBefore [=] "{0}"
      	bAfterRegex							is boolean			= sAfter [=] "{0}"
      
      	// Extends the selected text
      	sSelectedText is string = SelectionExtend( nCursor, nCursorEnd, eStyle )
      	
      	// The selection has been collapsed
      	if nCursor > nStoreCursor then
      		nDiffCursorSelection = nCursor - nStoreCursor
      	end
      	
      	// The selection has been collapsed
      	if nCursorEnd < nStoreCursorEnd then
      		nDiffEndCursorSelection = nCursorEnd - nStoreCursorEnd
      	end
      	
      	// No text selected: No text style is applied, only paragraph styles
      	if sSelectedText = "" then
      		if eStyle in ( bold, Italic, Bold_Italic, Strikethrough, Color ) then
      			return
      		end
      		
      		if eStyle = image
      			// Text must be added for the image to appear		
      			sSelectedText = "Caption"
      			nDiffEndCursorSelection += Length(sSelectedText)
      		
      		else if eStyle = link then
      			// To add text, take the URL
      			sSelectedText = URLExtractPath(sOptions, urlProtocol + urlDomain)
      			nDiffEndCursorSelection += Length(sSelectedText)
      		end
      	end
      	
      	// If a start token is used, make sure it is not already present
      	if eStyle = Heading_None _or_ ( sBefore <> "" _and_ sAfter = "" ) then
      		
      		// Apply a 'Heading' style
      		if eStyle.nom [= "Heading_" then
      			
      			// List heading styles from 'largest' to 'smallest'
      			for each eHeadingStyle of [ Heading_6, Heading_5, Heading_4, Heading_3, Heading_2, Heading_1, Quote ]
      				
      				sBeforeEx is string =  StyleToMarkdown( ( eHeadingStyle ) )
      				
      				// The text already has the style applied
      				if CompareBefore( sSelectedText, sBeforeEx ) then
      					
      					// Stores the size of the selected text
      					nDiffCursor		= sSelectedText.Size
      					
      					// Replace the 'before' part with an empty string
      					sSelectedText	= Replace(sSelectedText, sBeforeEx, "")	
      					
      					// Subtract the new size from the selected text
      					nDiffCursor -= sSelectedText.Size
      					
      					// Invert
      					nDiffCursor = -nDiffCursor				
      					break
      				end
      			end
      			
      		else if eStyle = Quote then
      			
      			// Stores the size of the selection
      			nSizeBefore	is int	= sSelectedText.Size		
      			
      			// For each selected ligne			
      			arrSelection	is array of strings
      			StringToArray( sSelectedText, arrSelection, CR )
      			bFound is boolean = False	
      			
      			for each sTextLineSelection, nRow of arrSelection
      				
      				// The text already has the style applied
      				if CompareBefore( sTextLineSelection, sBefore ) then
      					
      					// Replace the 'before' part with an empty string
      					sTextLineSelection[ 1 on sBefore.Size ]	= ""				
      					bFound										= True		
      				end
      			end
      			
      			// Do not replace if the style was found
      			if bFound then sBefore = ""
      			
      			// Applies before
      			nRowNum is int = 1
      			arrSelection.Applique( sTextLineSelection => {
      				sTextLineSelection = Replace(sBefore, "{0}", nRowNum++) + sTextLineSelection
      			} )
      			
      			// Rebuilds the selection
      			arrSelection		= arrSelection.Filter(sTextLineSelection => sTextLineSelection <> "")
      			sSelectedText	= arrSelection.ToString(bFound ? CR else CR + CR)
      			
      			// Move the cursor to the right by the same amount
      			if nStoreCursor = nStoreCursorEnd then
      				nDiffCursor	= -( nSizeBefore - sSelectedText.Size )
      				nDiffEndCursor	= nDiffCursor
      			else
      				nDiffCursor	= 0
      				nDiffEndCursor	= -( nSizeBefore - sSelectedText.Size )
      			end
      			
      			// Modifies the current selection
      			SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      			return
      			
      			// Apply a 'List' style
      		else if eStyle.Nom [= "List"
      			
      			// Stores the size of the selection
      			nSizeBefore	is int	= sSelectedText.Size
      			
      			// For each selected ligne			
      			arrSelection	is array of strings
      			StringToArray( sSelectedText, arrSelection, CR )
      			
      			// List the list styles to swap between them
      			for each eHeadingStyle of [ List2, List, OrderedList, Heading_6, Heading_5, Heading_4, Heading_3, Heading_2, Heading_1, Quote ]
      				
      				// If positioned on the style to be applied, ignore it
      				if eHeadingStyle = eStyle then continue
      				
      				sBeforeEx is string =  StyleToMarkdown( ( eHeadingStyle ) )
      				
      				for each sTextLineSelection, nRow of arrSelection
      					
      					// The text already has the style applied
      					if CompareBefore( sTextLineSelection, sBeforeEx ) then
      						
      						// Replace the 'before' part with an empty string
      						sTextLineSelection[ 1 on Length(sBeforeEx.Replace("{0}", nRow)) ] = ""						
      					end
      				end
      			end
      			
      			// Rebuilds the selection			
      			nRow	is int			
      			bFound	is boolean	= False	
      			
      			for each sTextLineSelection, nRow of arrSelection						
      				
      				// If the text already begins with the requested list style
      				if CompareBefore( sTextLineSelection,  sBefore ) then
      					
      					bFound = True				
      					
      					// Replace the 'before' part with an empty string
      					sTextLineSelection[ 1 on Length(sBefore.Replace("{0}", nRow)) ]	= ""					
      				end				
      			end
      			
      			// Do not replace if the style was found
      			if bFound then sBefore = ""
      			
      			// Applies before
      			nRowNum is int = 1
      			arrSelection.Applique( sTextLineSelection => {
      				sTextLineSelection = Replace(sBefore, "{0}", nRowNum++) + sTextLineSelection
      			} )
      			
      			// Rebuilds the selection
      			sSelectedText = arrSelection.ToString(CR)			
      			
      			// Move the cursor to the right by the same amount
      			if nStoreCursor = nStoreCursorEnd then
      				nDiffCursor	= -( nSizeBefore - sSelectedText.Size )
      				nDiffEndCursor	= nDiffCursor
      			else
      				nDiffCursor	= 0
      				nDiffEndCursor	= -( nSizeBefore - sSelectedText.Size )
      			end
      			
      			// Modifies the current selection
      			SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      			return
      			
      			// Special case for tab
      		else if eStyle in ( Tabulation, TabShift ) then			
      			
      			// Stores the size of the selection
      			nSizeBefore	is int	= sSelectedText.Size
      			
      			// For each selected ligne			
      			arrSelection	is array of strings
      			StringToArray( sSelectedText, arrSelection, CR )
      						
      			// Applies before
      			arrSelection.Applique( sTextLineSelection => {
      			
      				// Cancel tab
      				if eStyle = TabShift then
      					if sTextLineSelection [= sBefore then
      						sTextLineSelection[ 1 on sBefore.Size ] = ""
      					end
      					
      					// Apply tab				
      				else	
      					sTextLineSelection = sBefore + sTextLineSelection 
      				end			
      				
      			} )
      			
      			// Rebuilds the selection
      			sSelectedText	= arrSelection.ToString(CR)			
      			
      			// Move the cursor to the right by the same amount
      			nDiffCursor		= -( nSizeBefore - sSelectedText.Size )
      			nDiffEndCursor		= nDiffCursor
      			
      			// Modifies the current selection
      			SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      			return
      		end		
      		
      		sSelectedText	= sBefore + sSelectedText	
      		
      		// Move the cursor to the right by the same amount
      		nDiffCursor		= sBefore.Size + nDiffCursor
      		nDiffEndCursor	+= nDiffCursor			
      		
      		// Modifies the current selection
      		SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      		
      	// If the same tokens are applied before and after, check before/after pairs
      	else if sBefore <> "" _and_ sAfter <> "" then
      		
      		// The text already has the style applied
      		if CompareBefore( sSelectedText )  _and_ CompareAfter( sSelectedText ) then
      					
      			// With option on the 'before' part
      			if bBeforeRegex then
      				
      				// If it is the same option: Delete style, otherwise replace
      				if sSelectedText [= sBefore.Replace("{0}", sOptions) then
      					
      					// Stores the size of the selected text
      					nDiffCursor		= sSelectedText.Size
      					
      					// Replace the 'before' part with an empty string
      					sSelectedText	= RegexReplace(sSelectedText, ToRegex( sBefore, *, False ), "")				
      					
      					// Subtract the new size from the selected text
      					nDiffCursor -= sSelectedText.Size
      					
      					// Invert
      					nDiffCursor = -nDiffCursor				
      					
      				else
      					
      					// Replace the 'before' part with an empty string
      					sSelectedText = RegexReplace(sSelectedText, ToRegex( sBefore, *, False ), sBefore.Replace("{0}", sOptions))								
      					
      					// Modifies the current selection
      					SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      					return
      				end			
      				
      				// With option on the 'after' part
      			else if bAfterRegex then
      				
      				// If it is the same option: Delete style, otherwise replace
      				if sSelectedText =] sAfter.Replace("{0}", sOptions) then
      					
      					// Replace the 'after' part with an empty string
      					sSelectedText = RegexReplace(sSelectedText, ToRegex( sAfter, True, False ), "")				
      					
      				else
      					
      					// Replace the 'after' part with an empty string
      					sSelectedText = RegexReplace(sSelectedText, ToRegex( sAfter, True, False ), sAfter.Replace("{0}", sOptions))								
      					
      					// Modifies the current selection
      					SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      					return
      				end
      				
      			else
      				
      				// Deletes the before part
      				sSelectedText[ to sBefore.Size ]	= ""
      				
      				// Move the cursor to the left by the same amount
      				nDiffCursor							= -sBefore.Size
      			end
      			
      			// Replace 'after'
      			if bAfterRegex then
      				
      				if nStoreCursor = nCursor then
      					nDiffCursor	= 0
      					nDiffEndCursor	= -( sBefore.Size + sAfter.Size )
      				else
      					nDiffCursor	= -sBefore.Size
      					nDiffEndCursor	= nDiffCursor
      				end
      				
      				// Deletes the before part
      				sSelectedText[ to sBefore.Size ]	= ""
      				
      			// Replace 'before'
      			else	
      				
      				if nStoreCursor = nCursor then
      					nDiffCursor	= 0
      					nDiffEndCursor	= -( sBefore.Size + sAfter.Size )
      				else
      					nDiffEndCursor = nDiffCursor
      				end
      				
      				// Deletes the 'after' part of the selected text
      				sSelectedText[ sSelectedText.Size - sAfter.Size + 1 to ] = ""
      			end
      		else
      			
      			// Completes the before part with the provided options
      			sBefore				= sBefore.Replace("{0}", sOptions)
      			sAfter				= sAfter.Replace("{0}", sOptions)
      			
      			// Applies the style			
      			sSelectedText	= sBefore + sSelectedText + sAfter
      			
      			// Move the cursor to the right by the same amount
      			nDiffCursor 	+= sBefore.Size
      			nDiffEndCursor = nDiffCursor
      		end
      		
      		// Modifies the current selection
      		SelectionModify( sSelectedText, nCursor, nCursorEnd, nDiffCursor + nDiffCursorSelection, nDiffEndCursor + nDiffEndCursorSelection )
      	end
      	
      		INTERNAL PROCEDURE CompareBefore( sText is string, sTextBefore is string = sBefore )
      			if bBeforeRegex then
      				return RegexSearch( sText, ToRegex( sTextBefore ) + "[^[:space:][:punct:]]", [] ) > 0
      			else
      				return sText [= sTextBefore
      			end
      		end	
      	
      		INTERNAL PROCEDURE CompareAfter( sText is string, sTextAfter is string = sAfter )
      			if bAfterRegex then
      				return RegexSearch( sText, ToRegex( sTextAfter, True ), [] ) > 0
      			else
      				return sText =] sTextAfter
      			end
      		end	
     type : 458752
   -
     name : SelectionExtend
     internal_properties : CAAAAAgAAADCrDvCNlsnDTI3JpEQAj1E1a5vL2jx1lUq2jD6y4BVILJulKlDApyHKucAvmee7pos+anHgMN8WS88IodgdVObied/bUWn3FL4KLZiy8kGZWzp0lXu9WM3mQRg1oNxtXKHC9G/aXD8/SmJNBjaXA3oeqVNSHatDHzK46dsmkGpTs+MiM4LpyUo/5xdUJ6APGkqAk8tSx+5oT2gUm8TxkYBZRUsdVc7u2Mp5qn7IHbyF2cMy9phAl3V7zO4T+d0oo9cSxW/Qqxm2VfFQQ==
     procedure_id : 1446906475661675429
     type_code : 14
     code : |1-
      // Summary: Virtually extends the current selection to apply the style 
      // Syntax:
      //[ <Result> = ] SelectionExtend (<nCursor> is int, <nCursorEnd> is int, <eStyle> is IW_EDITOR.IW_EDITOR.MarkdownStyle)
      //
      // Parameters:
      //	nCursor (integer): Cursor position (can be modified)
      //	nCursorEnd (integer): End position of the cursor (can be modified)
      //	eStyle (IW_EDITOR.IW_EDITOR.MarkdownStyle): Style to apply
      
      // Return value:
      // 	ANSI string: Virtually selected text
      //
      procedure private SelectionExtend( nCursor is int, nCursorEnd is int, local eStyle is MarkdownStyle ) : string
      
      	sSelection	is string	= EDT_MARKDOWN.SelectedText
      	sTextBefore	is string	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]
      	sTextAfter	is string	= EDT_MARKDOWN[[ nCursorEnd to ]]
      	
      	///////////////////////////////////////
      	// Corrections
      	///////////////////////////////////////
      		
      	// Select the color
      	if RegexMatch("<span " + sSelection, "<span style=""color:[^""]+"">.*<\/span>") then
      		
      		// Update the selection
      		nCursor -= 6		
      		sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]
      		
      		// Modifies the virtual selection
      		sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      	end
      	
      	// Case of links and images
      	if ( sSelection [= "[" _and_ sSelection =] "]" )  then
      
      		if RegexMatch(sTextAfter, "\]?\(.*\).*") then	
      
      			// This is an image
      			if sTextBefore =] "!" _or_ sTextBefore =] "![" then				
      				
      				// Extend the selection
      				nCursor --
      				nCursorEnd += sTextAfter.Position(")") - 1
      				
      			else
      
      				// Reduce the selection
      				nCursor ++					
      				nCursorEnd --						
      			end
      						
      			// Modifies text before and after
      			sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]					
      			sTextAfter	= EDT_MARKDOWN[[ nCursorEnd to ]]				
      			
      			// Modifies the virtual selection
      			sSelection	= EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]				
      			
      		end
      	
      	else if ( sTextBefore =] "[" _and_ sTextAfter [= "]" ) then	
      
      		if RegexMatch(sTextAfter, "\]?\(.*\).*") then
      						
      			// This is an image
      			if sTextBefore =] "!" _or_ sTextBefore =] "![" then				
      				
      				// Extend the selection
      				if sTextBefore =] "!" then nCursor --
      				if sTextBefore =] "![" then nCursor -= 2
      				
      				nCursorEnd += sTextAfter.Position(")")
      			end			
      						
      			// Modifies text before and after
      			sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]					
      			sTextAfter = EDT_MARKDOWN[[ nCursorEnd to ]]				
      			
      			// Modifies the virtual selection
      			sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]		
      		end		
      	end	
      
      	// Checks all possible styles
      	switch eStyle
      	
      		// Lines
      		case Heading_1, Heading_2, Heading_3, Heading_4, Heading_5, Heading_6, Heading_None
      			
      			// Return to the beginning of the line
      			nEndPos   is int = Min(nCursor, Length(EDT_MARKDOWN))
      			nStartPos is int = Max(1, Position(EDT_MARKDOWN, CR, nEndPos - 1, FromEnd))		
      			
      			if nStartPos > nEndPos then
      				nStartPos <=> nEndPos
      			end
      			
      			// Removes the Carriage Return
      			sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			while sTextBefore[ 1 ] in ( Charact(10), Charact(13) )
      				nStartPos ++
      				sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			end
      			
      			// Modifies the virtual cursor
      			nCursor = nStartPos
      			nCursorEnd = Position(EDT_MARKDOWN, CR, nStartPos)			
      			if nCursorEnd < 1 then nCursorEnd = Length(EDT_MARKDOWN) + 1
      			
      			// Update
      			sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      			
      		// Paragraphs
      		case List, List2, OrderedList, Quote
      					
      			// Return to the beginning of the line
      			nEndPos   is int = Min(nCursor, Length(EDT_MARKDOWN))
      			nStartPos is int = Max(1, Position(EDT_MARKDOWN, CR, nEndPos - 1, FromEnd))		
      			
      			if nStartPos > nEndPos then
      				nStartPos <=> nEndPos
      			end
      			
      			// Removes the Carriage Return
      			sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			while sTextBefore[ 1 ] in ( Charact(10), Charact(13), TAB, " " )
      				nStartPos ++
      				sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			end
      			
      			// Modifies the virtual cursor
      			nCursor	= nStartPos
      			nCursorEnd	= Position(EDT_MARKDOWN, CR, nStartPos + Length(sSelection) - 1)			
      			if nCursorEnd < 1 then nCursorEnd = Length(EDT_MARKDOWN) + 1
      			
      			// Update
      			sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]		
      			
      		// Paragraphs
      		case Tabulation, TabShift
      					
      			// Return to the beginning of the line
      			nEndPos   is int = Min(nCursor, Length(EDT_MARKDOWN))
      			nStartPos is int = Max(1, Position(EDT_MARKDOWN, CR, nEndPos - 1, FromEnd))		
      			
      			// Removes the Carriage Return
      			sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			while sTextBefore[ 1 ] in ( Charact(10), Charact(13) )
      				nStartPos ++
      				sTextBefore = EDT_MARKDOWN[[ nStartPos to ]]
      			end
      			
      			// Modifies the virtual cursor
      			nCursor	= nStartPos
      			nCursorEnd	= Position(EDT_MARKDOWN, CR, nStartPos + Length(sSelection) - 1)			
      			if nCursorEnd < 1 then nCursorEnd = Length(EDT_MARKDOWN) + 1
      			
      			// Update
      			sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]		
      					
      		// Pairs			
      		case bold, Italic, Bold_Italic, Strikethrough, Color, image, link	
      			
      			// Step 1: If no text is selected (e.g. a cursor positioned on a word)
      			// Automatically extend selection to the word at cursor position
      			if sSelection = "" then
      				
      				nSpaceBefore, nSpaceAfter are int
      				arrSpc is array of strings = [ " ", "*", ">", "<", "[", "]", "(", ")" ]
      				if eStyle in (image, link) then arrSpc.Add(CR)
      				
      				nSpaceBefore = sTextBefore.Position(arrSpc, sTextBefore.Size, FromEnd)
      				nSpaceAfter = sTextAfter.Position(arrSpc)
      				
      				if nSpaceBefore < 1 then nSpaceBefore = 0
      				if nSpaceAfter < 1 then nSpaceAfter = sTextAfter.Position(CR, nCursorEnd)
      				if nSpaceAfter < 1 then nSpaceAfter = sTextAfter.Size + 1
      				
      				// Update virtual selection
      				nCursor = nSpaceBefore + 1
      				nCursorEnd = nCursorEnd + ( nSpaceAfter - 1 )
      				
      				// New selected text
      				sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      				while sSelection [= CR 
      					nCursor += 2
      					sSelection = EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      				end
      				
      				// Update before/after parts
      				sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]
      				sTextAfter	= EDT_MARKDOWN[[ nCursorEnd to ]]
      			end
      			
      			// Step 2: Removes spaces
      			while sSelection [= " "
      				
      				nCursor ++
      				
      				// New selected text
      				sSelection	= EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      				
      				// Update before/after parts
      				sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]
      				sTextAfter	= EDT_MARKDOWN[[ nCursorEnd to ]]
      			end
      			
      			while sSelection =] " "
      				
      				nCursorEnd --
      				
      				// New selected text
      				sSelection	= EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]]
      				
      				// Update before/after parts
      				sTextBefore	= EDT_MARKDOWN[[ 1 to nCursor - 1 ]]
      				sTextAfter	= EDT_MARKDOWN[[ nCursorEnd to ]]
      			end
      				
      			arrOccurrences is array of strings		
      			sBefore, sAfter are strings	
      					
      			// If italic formatting is applied
      			if eStyle = Italic then
      				
      				// First, check for 'Bold+Italic'
      				if __AnalyzeBefore( nCursor, Bold_Italic ) = False then
      					
      					// Otherwise, check for 'Italic'					
      					__AnalyzeBefore( nCursor, Italic )
      					__AnalyzeAfter( nCursorEnd, Italic )
      				else
      					__AnalyzeAfter( nCursorEnd, Bold_Italic )
      				end
      			else 
      				
      				if sSelection ~= "" _or_ sSelection in ( CR, Charact(10) ) then
      					sSelection = ""
      				else
      					
      					// Check for <style>
      					__AnalyzeBefore( nCursor, eStyle )
      					__AnalyzeAfter( nCursorEnd, eStyle )			
      				end
      			end
      		
      			// Analyze the text before the cursor to check if the style should be applied or removed
      			INTERNAL PROCEDURE __AnalyzeBefore( nCursorEx is int, eStyleEx is MarkdownStyle )		
      			
      				( sBefore, sAfter ) = StyleToMarkdown( eStyleEx )				
      				bBeforeRegex is boolean = sBefore [=] "{0}"
      				bAfterRegex is boolean = sAfter [=] "{0}"
      				sExclusion is string = CalculateExclusion()
      								
      				// Count the number of <before>*<after>
      				RegexSearch( sTextBefore, ToRegex( sBefore ) + sExclusion + ToRegex( sAfter, True ), arrOccurrences )
      				
      				// Deletes occurrences
      				sTextBefore = sTextBefore.Replace(arrOccurrences, "")
      				
      				// If there is an occurrence of 'before'
      				if ContainsEx( sTextBefore, bBeforeRegex, sBefore, True ) then
      					
      					// Stores the current start cursor
      					nBackupCursor is int = nCursorEx				
      					
      					// Calculates the new position of the start cursor to take into account the 'before'
      					let N = Position(EDT_MARKDOWN, sBefore.ExtractString(1, "{0}"), nCursorEx, FromEnd)
      					
      					// Checks the sought element is present
      					if RegexSearch( EDT_MARKDOWN[[ N to ]], ToRegex( sBefore ) + sExclusion, [] ) > 0 then
      						nCursorEx = N
      						
      						// Changes the selected text
      						sSelection = EDT_MARKDOWN[[ nCursorEx to nBackupCursor - 1 ]] + sSelection
      						
      						return True
      					end
      				end			
      				
      				return False
      			end
      			
      			// Analyze the text after the cursor to check if the style should be applied or removed
      			INTERNAL PROCEDURE __AnalyzeAfter( nCursorEx is int, eStyleEx is MarkdownStyle )		
      				
      				( sBefore, sAfter ) = StyleToMarkdown( eStyleEx )				
      				bBeforeRegex	is boolean	= sBefore [=] "{0}"
      				bAfterRegex	is boolean	= sAfter [=] "{0}"
      				sExclusion	is string	= CalculateExclusion()
      				
      				// Count the number of <before>*<after>
      				RegexSearch( sTextAfter, ToRegex( sBefore ) + sExclusion + ToRegex( sAfter, True ), arrOccurrences )
      				
      				// Deletes occurrences
      				sTextAfter = sTextAfter.Replace(arrOccurrences, "")
      				
      				// If there is an occurrence of 'before'
      				if ContainsEx( sTextAfter, bAfterRegex, sAfter, False ) then
      					
      					// Stores the current start cursor
      					nBackupCursor is int = nCursorEx			
      					
      					sAfterEx is string = sAfter.ExtractString(2, "{0}")	
      					if sAfterEx = EOT then sAfterEx = sAfter.ExtractString(1, "{0}")	
      					
      					// Calculates the new position of the end cursor to take into account the 'after'
      					nCursorEx	= Position(EDT_MARKDOWN, sAfterEx, nCursorEx) + Length(sAfterEx)
      					
      					// Changes the selected text
      					sSelection	= sSelection + EDT_MARKDOWN[[ nBackupCursor to nCursorEx - 1 ]]
      										
      					return True
      				end			
      				
      				return False
      			end
      			
      			// Generates a regular expression to exclude characters
      			INTERNAL PROCEDURE CalculateExclusion()
      
      				return "(?:" + "(?!(" + ToRegex( sBefore, *, False ) + ".*" + ToRegex( sAfter, *, False ) + "))" + ".)"
      			end
      			
      			// Advanced version of the Contains function
      			INTERNAL PROCEDURE ContainsEx( sText is string, bRegEx is boolean, sPart is string, bBefore is boolean )
      				
      				sExclusion is string = CalculateExclusion()
      				
      				// if there is a regular expression
      				if bRegEx then
      					
      					// checks for the text in the part
      					if bBefore then
      						return RegexSearch( sText, sExclusion + ToRegex( sPart ), [] ) > 0						
      					else
      						return RegexSearch( sText, ToRegex( sPart ) + sExclusion, [] ) > 0
      					end
      				else
      					
      					// checks for the text in the part
      					if sText [=] sPart then
      						
      						if bBefore then
      							
      							nPos is int = sText.Position(sPart, sText.Size, FromEnd) - sPart.Size
      							
      							// check that there is not another part before the current part
      							if sText[ nPos on sPart.Size ] <> sPart then
      								return True
      							end
      						else
      							// check that there is not another part after the current part
      							if sText[ sText.Position(sPart) + sPart.Size on sPart.Size ] <> sPart then
      								return True
      							end
      						end
      					end
      				end
      				
      				return False
      			end	
      			
      	end
      	
      	
      return sSelection
     type : 458752
   -
     name : SelectionModify
     procedure_id : 1446906475661740965
     type_code : 14
     code : |1+
      // Summary: Modifies the text of the selection
      // Syntax:
      //SelectionModify (<sText> is string, <nCursor> is int, <nCursorEnd> is int, <nDiffCursor> is int, <nDiffEndCursor> is int)
      //
      // Parameters:
      //	sText (ANSI string): Modified text
      //	nCursor (integer): Start position
      //	nCursorEnd (integer): End position
      //	nDiffCursor (integer): Difference to apply to the start cursor
      //	nDiffEndCursor (integer): Difference to apply to the end cursor
      // Return value:
      // 	None
      //
      procedure private SelectionModify( sText is string, nCursor is int, nCursorEnd is int, nDiffCursor is int,nDiffEndCursor is int )
      
      	// Stores the current selection
      	nStoreCursor, nStoreCursorEnd are int = ( EDT_MARKDOWN.Cursor, EDT_MARKDOWN.CursorEnd )
      
      	EDT_MARKDOWN.DisplayEnabled = False
      	STC_MARKDOWN.DisplayEnabled = False
      	
      	// Special case of <RC> characters which can be split
      	// into two, either to the left or to the right of the string
      	if (nCursorEnd - 1 ) - nCursor <= 1 then
      		if EDT_MARKDOWN[[ nCursor to nCursorEnd ]] = CR then
      			nCursorEnd++
      			sText = CR + sText
      		else if EDT_MARKDOWN[[ nCursor - 1 to nCursorEnd - 1 ]] = CR then
      			nCursor--
      			sText = CR + sText
      		end
      	end
      
      	// Update
      	EDT_MARKDOWN[[ nCursor to nCursorEnd - 1 ]] = sText
      	
      	// Re-applies the stored selection
      	EDT_MARKDOWN.Cursor = nStoreCursor + nDiffCursor
      	EDT_MARKDOWN.CursorEnd = nStoreCursorEnd + nDiffEndCursor
      	
      	DisplayMarkdown()	
      		
      	STC_MARKDOWN.DisplayEnabled = True
      	EDT_MARKDOWN.DisplayEnabled = True
     type : 458752
   -
     name : StyleToMarkdown
     procedure_id : 1446906475661806501
     type_code : 14
     code : |1-
      // Summary: Converts a style to text
      // Syntax:
      //[ <Result> = ] StyleToMarkdown (<eStyle> is IW_EDITOR.IW_EDITOR.MarkdownStyle)
      //
      // Parameters:
      //	eStyle (IW_EDITOR.IW_EDITOR.MarkdownStyle): Style
      // Return value:
      // 	multi-value: Text before, text after
      //
      procedure private StyleToMarkdown( eStyle is MarkdownStyle ) : ( string, string )
      
      	switch eStyle
      		case bold
      			return ( "**", "**" )
      			
      		case Italic
      			return ( "*", "*" )
      			
      		case Bold_Italic
      			return ( "***", "***" )
      			
      		case Strikethrough
      			return ( "~~", "~~" )			
      			
      		case Color
      			return ( "<span style=""color:{0}"">", "</span>" )	
      			
      		case link
      			return ( "[", "]({0})")
      			
      		case image
      			return ( "![", "]({0})")
      			
      		case List
      			return ( "- ", "" )
      			
      		case List2
      			return ( "* ", "" )
      		
      		case OrderedList
      			return ( "{0}. ", "" )
      			
      		case Quote
      			return ( "> ", "" )
      			
      		case Tabulation
      			return ( TAB, "" )
      			
      		case TabShift
      			return ( TAB, "" )
      			
      		case Heading_1
      			return ( "# ", "" )	
      			
      		case Heading_2
      			return ( "## ", "" )	
      			
      		case Heading_3
      			return ( "### ", "" )	
      			
      		case Heading_4
      			return ( "#### ", "" )	
      			
      		case Heading_5
      			return ( "##### ", "" )	
      			
      		case Heading_6
      			return ( "###### ", "" )	
      			
      		case Heading_None
      			return ( "", "" )	
      			
      	end
      	
      	dbgAssert(False, "Unknown style")
      	
      return ( "", "" )
     type : 458752
   -
     name : ToRegex
     internal_properties : CAAAAAgAAABnUWatHZUXMoDb8Dy57Vr5+ic//F/Y/IEPvb78nKEJSVeikCR1rh3dNvUTGqCO8yTFCDhYZt7PA4euLU4nuVUtZNjRPJgRAUNpSz/1BQM/M7T3ZS6tif+TygtiXqVlQWvaRbK/vHrORgiqWwA=
     procedure_id : 1446906475661872037
     type_code : 14
     code : |1-
      // Summary: Protects a given text to be used with regular expressions
      // Syntax:
      //[ <Result> = ] ToRegex (<sText> is string [, <bPrecede> is boolean [, <bWholeWord> is boolean]])
      //
      // Parameters:
      //	sText (ANSI string): Text to protect
      //	bPrecede (boolean - default value=0): True if this text can be preceded by other characters (without spaces), False otherwise
      // 	bWholeWord (boolean - default=1): True if the text is a whole word, False otherwise
      
      // Return value:
      // 	ANSI string: Text with protected sequences
      //
      procedure private ToRegex( local sText is string, bPrecede is boolean = False, bWholeWord is boolean = True ) : string
      
      	sText = sText.Replace("\", "\\")
      	sText = sText.Replace("*", "\*")
      	sText = sText.Replace(".", "\.")
      	sText = sText.Replace("/", "\/")
      	sText = sText.Replace("~", "\~")
      	sText = sText.Replace("!", "\!")
      	sText = sText.Replace("(", "\(")
      	sText = sText.Replace(")", "\)")
      	sText = sText.Replace("[", "\[")
      	sText = sText.Replace("]", "\]")
      	sText = sText.Replace("{0}", "[^""]+")
      	
      	if bWholeWord then
      		if sText not =] " " then
      			if bPrecede then
      				sText = "[^\s]*" + sText
      			else
      				sText += "[^\s]*"
      			end
      		end
      	end
      
      return sText
     type : 458752
   -
     name : __OnTab
     procedure_id : 1446906475661937573
     type_code : 14
     code : |1-
      // Summary: Manages tab characters
      // Syntax:
      // __OnTab ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      procedure private __OnTab()
      	
      	// If there is a selection
      	if EDT_MARKDOWN.SelectedText <> "" then
      		
      		if KeyPressed(kpShift) then
      			SelectionApply( TabShift )
      		else	
      			SelectionApply( Tabulation )
      		end
      		
      		return False
      	end		
      	
      	// If the position is set at the beginning of a line or just before a tab
      	if EDT_MARKDOWN.Cursor = 1 _or_ EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - 2 on 2 ]] = CR _or_ ( EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - 1 on 1 ]] = TAB _or_ EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - Length(TAB_SPACES) on Length(TAB_SPACES) ]] = TAB_SPACES ) then
      		
      		if KeyPressed(kpShift) then
      			SelectionApply( TabShift )
      		else	
      			SelectionApply( Tabulation )
      		end
      		
      		return False
      	end
      	
      	// If a list is declared just before the character
      	if EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - 2 on 2 ]] = "- " _or_ EDT_MARKDOWN[[ EDT_MARKDOWN.Cursor - 2 on 2 ]] = "* " then
      		
      		if KeyPressed(kpShift) then
      			SelectionApply( TabShift )
      		else	
      			SelectionApply( Tabulation )
      		end
      		
      		return False
      	end
      
      	// CTRL+TAB to insert a tab in the text	
      	if KeyPressed(kpControl) then
      		return True
      	end
      	
      return False
     type : 458752
   -
     name : Export
     internal_properties : CAAAAAgAAACZXkPQ1D2Bx/KcNUuRCCYtY6WT62x9ecisb9hOflGu+rFcOPCYVIX1FdkqoNW28Ht/Xd1Zf9UVh3wurlV7QqUGVPevCi6HBKNvrVT996AIKK0v4VuVcv8cefhrxUx905lcSATbnQ3QJhfreU5dqPb6zquwBFTFisWdWQwuwg76S2whmhOUafHvyFc1MkFuiQoksTwvFj6ck6IGO0PUiOI=
     procedure_id : 1446906475662003109
     type_code : 14
     group : 4
     code : |1-
      // Summary: Exports the Markdown text
      // Syntax:
      //Export (<nFormat> is int)
      //
      // Parameters:
      //	nFormat (integer): Export format
      // Return value:
      // 	None
      //
      procedure Export( nFormat is int )
      
      	if __MyInternalWin.AllowExport = False then
      		return
      	end
      
      	sFile is string
      
      	switch nFormat
      		case iText
      					
      			// Opens the file picker
      			sFile = fSelect("", "", "Save as...", "All files (*.*)" + TAB + "*.*" + CR + "Text files (*.txt)" + TAB + "*.TXT", "TXT", fselCreate + fselExist)
      			if sFile <> "" then
      				fSaveText(sFile, MarkdownToText(EDT_MARKDOWN)) 
      			end
      				
      		case iHTML
      			
      			// Opens the file picker
      			sFile = fSelect("", "", "Save as...", "All files (*.*)" + TAB + "*.*" + CR + "HTML files (*.html,*.htm)" + TAB + "*.HTML;*.HTM", "HTML", fselCreate + fselExist)
      			if sFile <> "" then
      				
      				sHTML is string ANSI = MarkdownToHTML(EDT_MARKDOWN)
      				
      				// MarkdownToHTML returns a UTF-8 string
      				// Specify the format in the generated HTML
      				sHTML = "<html><head><meta charset=""UTF-8""></head><body>" + sHTML + "</body></html>"
      				
      				fSaveBuffer(sFile, sHTML) 
      			end
      			
      		case iRTF
      			
      			// Opens the file picker
      			sFile = fSelect("", "", "Save as...", "All files (*.*)" + TAB + "*.*" + CR + "Word documents (*.docx)" + TAB + "*.DOCX", "DOCX", fselCreate + fselExist)
      			if sFile <> "" then
      				
      				// Conversion
      				docExp is Document = MarkdownToDOCX(EDT_MARKDOWN)
      				
      				// Save
      				docExp.Save(sFile) 
      			end		
      			
      		case iPDF
      							
      			// Opens the file picker
      			sFile = fSelect("", "", "Save as...", "All files (*.*)" + TAB + "*.*" + CR + "PDF files (*.pdf)" + TAB + "*.PDF", "PDF", fselCreate + fselExist)
      			if sFile <> "" then
      				fSaveBuffer(sFile, MarkdownToPDF(EDT_MARKDOWN)) 
      			end
      	end
      	
      	if sFile <> "" then
      		ShellExecute(sFile)
      	end
      	
     type : 458752
   -
     name : DisplayMarkdown
     procedure_id : 1446906475662068645
     type_code : 14
     code : |1+
      // Summary: Displays the Markdown result
      // Syntax:
      // DisplayMarkdown ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      procedure private DisplayMarkdown()
      	
      	STC_MARKDOWN				= EDT_MARKDOWN
      	
      	SC_MARKDOWN.UsefulWidth	= Max(SC_MARKDOWN.Width, TextWidth(STC_MARKDOWN, EDT_MARKDOWN, tDefault))
      	SC_MARKDOWN.UsefulHeight	= Max(SC_MARKDOWN.Height, TextHeight(STC_MARKDOWN, EDT_MARKDOWN, tMultiline + tWithMargin))
      	
      	STC_MARKDOWN.Width		= SC_MARKDOWN.UsefulWidth
      	STC_MARKDOWN.Height		= SC_MARKDOWN.UsefulHeight
     type : 458752
   -
     name : __PressKey
     procedure_id : 1446906475662134181
     type_code : 14
     code : |1-
      // Summary: Handles the press event specific keys
      // Syntax:
      //[ <Result> = ] __PressKey (<Keys> is associative array (string))
      //
      // Parameters:
      //	Keys (associative array (ANSI string)): Keys
      // Return value:
      // 	boolean: True if the key was handled, False otherwise
      //
      procedure private __PressKey( Keys is ASSOCIATIVE ARRAY of strings ) : boolean
      
      	nCursor, nEndCursor are int = ( EDT_MARKDOWN.Cursor, EDT_MARKDOWN.CursorEnd )
      	bLabel is boolean
      	
      	// Checks if we are in an image label or a link label
      	sBefore is string = EDT_MARKDOWN[[ to nCursor - 1 ]]
      	sAfter is string = EDT_MARKDOWN[[ nCursor to ]]
      	
      	if Position(sBefore, [ "[", "![" ], Length(sBefore), FromEnd) > Position(sBefore, "]", Length(sBefore), FromEnd) then
      		if Position(sAfter, [ "[", "![" ]) = 0 _or_ Position(sAfter, [ "[", "![" ]) > Position(sAfter, "]") then
      			bLabel = True
      		end
      	end
      	
      	if bLabel then
      	
      		for each sReplacement, sKey of Keys
      			if _EVE.wParam = Asc(sKey) then
      				if KeyPressed(kpShift) = False then
      					
      					// Allow these characters at the beginning of the line
      					if sKey in ( "#", "-", "`" ) then
      						return False
      					end
      				
      					EDT_MARKDOWN[[ nCursor - 1 on 1 ]]			= sReplacement
      					EDT_MARKDOWN.Cursor							= nCursor + 1
      					EDT_MARKDOWN.CursorEnd							= nEndCursor + 1
      					return True				
      				end
      			end
      		end
      	end
      	
      return False
     type : 458752
   -
     name : __OnEnterKey
     internal_properties : CAAAAAgAAABGB3chr/qU3U4OP5iHPeNe2LWqddonAUiFr9oU6DWAr+ZvNSmPWxl44TKL+dD0FpGEDzHQ+mzjRpFJRqitzGtuK0kRhibcwVA5MsgjAbxBRpW62XCjDqGCsNp/2OFUoVjF6qgrgBXok7SwYnmd
     procedure_id : 1446906475662199717
     type_code : 14
     code : |1-
      // Summary: Called when the [Enter] key is pressed
      // Syntax:
      // __OnEnterKey ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      procedure private __OnEnterKey()
      
      	nCursor, nEndCursor	are int	= ( EDT_MARKDOWN.Cursor, EDT_MARKDOWN.CursorEnd )
      	bEndLine				is boolean		= EDT_MARKDOWN[[ nCursor on 2 ]] = CR _or_ nCursor > Length(EDT_MARKDOWN)
      
      	if bEndLine then
      		
      		nStartSize is int = 2
      		nStartDiff is int	
      		nStartPos is int = Position(EDT_MARKDOWN, CR, nCursor - 1, FromEnd)
      		if nStartPos = 0 then nStartPos = 1
      		
      		if EDT_MARKDOWN[[ nStartPos on 2 ]] = CR then nStartPos += 2
      		while EDT_MARKDOWN[[ nStartPos + nStartDiff on 1 ]] = TAB 
      			nStartDiff ++
      			nStartSize ++
      		end
      
      		sIndex is string		
      		bOrderedList is boolean = RegexMatch(ExtractString(EDT_MARKDOWN[[ nStartPos + nStartDiff to ]], 1, CR), "([0-9]+)\. .*", sIndex)
      		bTabs is boolean   = RegexMatch(ExtractString(EDT_MARKDOWN[[ nStartPos + nStartDiff to ]], 1, CR), "([%TAB%]+).*", sIndex)
      		
      		// Unordered or ordered list
      		if EDT_MARKDOWN[[ nStartPos + nStartDiff on 2 ]] = "- " _or_ EDT_MARKDOWN[[ nStartPos + nStartDiff on 2 ]] = "* " _or_ EDT_MARKDOWN[[ nStartPos + nStartDiff on 2 ]] = "* " _or_ bOrderedList _or_ bTabs then
      		
      			nEndPos is int = Position(EDT_MARKDOWN, CR, nStartPos + nStartDiff) - 1
      			if nEndPos < 1 then nEndPos = Length(EDT_MARKDOWN)
      			
      			nStartSize += Length(sIndex)
      			
      		
      			// If on an empty line
      			if Length(EDT_MARKDOWN[[ nStartPos + nStartDiff to nEndPos ]]) = nStartSize then
      				// Delete empty line
      				EDT_MARKDOWN[[ nStartPos to nEndPos ]] = ""
      				EDT_MARKDOWN.Cursor		= nStartPos + 1
      				EDT_MARKDOWN.CursorEnd		= nStartPos
      				return False
      			end
      		
      			// End of the text
      			if nCursor > Length(EDT_MARKDOWN) then
      				
      				if bOrderedList then
      					EDT_MARKDOWN += CR + ( Val(sIndex) + 1 ) + ". "
      				else
      					EDT_MARKDOWN += CR + EDT_MARKDOWN[[ nStartPos on nStartSize ]]
      				end
      				
      				EDT_MARKDOWN.Cursor 	= Length(EDT_MARKDOWN) + 1
      				EDT_MARKDOWN.CursorEnd = 0
      			
      			// In the text
      			else
      				
      				if bOrderedList then nStartSize += 2 
      				
      				if bOrderedList then
      					EDT_MARKDOWN[[ nCursor on nStartSize ]] = CR + ( Val(sIndex) + 1 ) + ". " + CR + ( Val(sIndex) + 2 ) + ". "
      					nStartSize -= 2
      				else
      					EDT_MARKDOWN[[ nCursor on nStartSize ]] = CR + EDT_MARKDOWN[[ nStartPos on nStartSize ]] + CR
      				end
      				
      				EDT_MARKDOWN.Cursor							= nCursor + 2 + nStartSize
      				EDT_MARKDOWN.CursorEnd							= nCursor
      			end
      		
      			return False			
      		end			
      	end
      	
      	
      	
      return True
     type : 458752
   -
     name : Load
     procedure_id : 1446906475662265253
     type_code : 14
     group : 4
     code : |1-
      // Summary: Loads a Markdown file
      // Syntax:
      //Load (<sFile> is string)
      //
      // Parameters:
      //	sFile (ANSI string): File to load
      // Return value:
      // 	None
      //
      procedure Load( sFile is string )
      
      	if __MyInternalWin.AllowOpen = False then
      		return
      	end
      
      	if fFileExist(sFile) = False then
      		ErrorThrow(404, "Invalid file")
      		return
      	end
      	
      	if CheckModifiedToSave() = False then
      		return
      	end
      	
      	EDT_MARKDOWN.Extra.CurrentFile = sFile
      
      	// Assigns
      	sMarkdown is string = fLoadText(sFile)
      	Assign( sMarkdown )
      	
      	if __AssociatedTab <> Null then
      		__AssociatedTab.Caption = fExtractPath(sFile, fFile + fExtension)		
      	end
     type : 458752
   -
     name : Save
     procedure_id : 1446906475662330789
     type_code : 14
     group : 4
     code : |1-
      // Summary: Saves the Markdown text
      // Syntax:
      //[ <Result> = ] Save (<sFile> is string)
      //
      // Parameters:
      //	sFile (ANSI string): File to save
      // Return value:
      // 	boolean: True if the Markdown text was saved, False otherwise
      //
      procedure Save( local sFile is string )
      
      	if sFile = "" then
      				
      		// Opens the file picker
      		sFile = fSelect("", "", "Save as...", "All files (*.*)" + TAB + "*.*" + CR + "Markdown documents (*.MD)" + TAB + "*.MD", "MD", fselCreate + fselExist)
      		if sFile = "" then
      			return False			
      		end		
      	end
      	
      	// Save
      	sMarkdown is string = EDT_MARKDOWN
      	if fSaveText(sFile, sMarkdown) then
      	
      		EDT_MARKDOWN.Extra.CurrentFile	= sFile
      		EDT_MARKDOWN.Modified				= False
      	
      		if __AssociatedTab <> Null then
      			__AssociatedTab.Caption = fExtractPath(sFile, fFile + fExtension)
      		end
      	
      		return True	
      	end
      	
      return False
     type : 458752
   -
     name : OnClose
     procedure_id : 1446906475662396325
     type_code : 14
     code : |1-
      // Summary: Call when the tab is closed
      // Syntax:
      //[ <Result> = ] OnClose ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	boolean: True if able to close, False otherwise
      //
      procedure restreinte OnClose() : boolean
      return CheckModifiedToSave()
     type : 458752
   -
     name : Assign
     procedure_id : 1446906475662461861
     type_code : 14
     code : |1-
      // Summary: <specify the action of the procedure>
      // Syntax:
      //Assigns (<sMarkdown> is string)
      //
      // Parameters:
      //	sMarkdown (ANSI string) : <specify the role of sMarkdown>
      // Return value:
      // 	None
      //
      procedure Assign( sMarkdown is string )
      
      	// Assigns	
      	EDT_MARKDOWN						= sMarkdown
      	EDT_MARKDOWN.Modified				= False
      	
      	// Displays
      	DisplayMarkdown()
     type : 458752
   -
     name : CheckModifiedToSave
     procedure_id : 1446906475662527397
     type_code : 14
     code : |1-
      // Summary: Checks whether we need to save
      // Syntax:
      //[ <Result> = ] CheckModifiedToSave ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	boolean : True if we can continue, False otherwise
      //
      procedure private CheckModifiedToSave()
      
      	if __MyInternalWin.AllowSave then
      		if EDT_MARKDOWN.Modified then
      			switch Dialog("The current changes have not been saved. Save them now?", [ "Save", "Don't save", "Cancel" ] , 1, 3)
      				case 1
      					
      					// Saves
      					if Save( ( EDT_MARKDOWN.Extra.CurrentFile..Exist ? EDT_MARKDOWN.Extra.CurrentFile else "" ) ) = False then
      						return False
      					end
      					
      				case 3
      					return False
      			end
      		end
      	end
      	
      return True
     type : 458752
   -
     name : __ChangeSize
     procedure_id : 1446906475662592933
     type_code : 14
     code : |1-
      // Summary: Run at each size change
      // Syntax:
      // __ChangeSize ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      procedure private __ChangeSize()
      
      L is real
      if __MyInternalWin.PreviewAvailable then
      	L = ( LAYOUT_MARKDOWN.Width - LAYOUT_MARKDOWN.MarginInterCell ) / 2
      	
      	LAYOUT_MARKDOWN[ 1 ].Largeur		= L
      	EDT_MARKDOWN.Width			= L
      	LAYOUT_MARKDOWN[ 2 ].Largeur		= L
      	SC_MARKDOWN.Width				= L
      else
      	
      	L = LAYOUT_MARKDOWN.Width
      	LAYOUT_MARKDOWN[ 1 ].Largeur	= L
      	EDT_MARKDOWN.Width		= L	
      end
     type : 458752
  properties :
   -
     name : AllowOpen
     identifier : 0x141471c60915cba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public AllowOpen() : boolean
         return BTN_COMMAND_OPEN.Visible
        type : 1966080
      -
        code : |1-
         procedure public AllowOpen( bAllowed is boolean )
         BTN_COMMAND_OPEN.Visible = bAllowed
        type : 2031616
     template_refs : []
   -
     name : AllowSave
     identifier : 0x141471c60916cba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public AllowSave()
         return BTN_COMMAND_SAVE.Visible
        type : 1966080
      -
        code : |1-
         procedure public AllowSave( bAllowed is boolean )
         BTN_COMMAND_SAVE.Visible = bAllowed
        type : 2031616
     template_refs : []
   -
     name : AllowExport
     identifier : 0x141471c60917cba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public AllowExport() : boolean
         return GR_EXPORT.Visible
        type : 1966080
      -
        code : |1-
         procedure public AllowExport( bAllowed is boolean )
         GR_EXPORT.Visible = bAllowed
         if bAllowed then
         	BTN_COMMAND_VIEW.X = BTN_COMMAND_COPY.X - ( BTN_COMMAND_VIEW.Width + CoordinateEditorToScreen(6) )
         else
         	BTN_COMMAND_VIEW.X = BTN_COMMAND_EXPORT.X
         end
        type : 2031616
     template_refs : []
   -
     name : LightMode
     identifier : 0x141471c60918cba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public LightMode() : boolean
         return __MyInternalWin.Extra.LightMode..Exist ? __MyInternalWin.Extra.LightMode else False
        type : 1966080
      -
        code : |1-
         procedure public LightMode( bValue is boolean )
         
         	__MyInternalWin.Extra.LightMode = bValue
         	
         	if bValue then
         		__MyInternalWin.BackgroundColor = White
         		STC_DIVIDE.BackgroundColor = White
         		EDT_MARKDOWN.BackgroundColor = White
         		SC_MARKDOWN.BackgroundColor = 0xFEFEFE
         	else
         		__MyInternalWin.BackgroundColor	= 0x202020
         		STC_DIVIDE.BackgroundColor = 0x202020
         		EDT_MARKDOWN.BackgroundColor = 0xF1EFEF
         		SC_MARKDOWN.BackgroundColor = 0xDEDEDE
         	end
         	
        type : 2031616
     template_refs : []
   -
     name : PreviewAvailable
     identifier : 0x141471c60919cba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public PreviewAvailable() : boolean
         return LAYOUT_MARKDOWN[ 2 ].Visible
        type : 1966080
      -
        code : |1-
         procedure public PreviewAvailable( bValue is boolean )
         LAYOUT_MARKDOWN[ 2 ].Visible = bValue
         __ChangeSize()
        type : 2031616
     template_refs : []
   -
     name : AssociatedTab
     identifier : 0x141471c6091acba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public AssociatedTab()
         return __AssociatedTab
        type : 1966080
      -
        code : |1-
         procedure public AssociatedTab( oValue is Control )
         __AssociatedTab <- oValue
        type : 2031616
     template_refs : []
   -
     name : Modified
     identifier : 0x141471c6091bcba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public Modified() : boolean
         return EDT_MARKDOWN.Modified
        type : 1966080
      -
        code : |1-
         procedure public Modified( bValue is boolean )
         EDT_MARKDOWN.Modified = bValue
        type : 2031616
     template_refs : []
   -
     name : AllowEditView
     identifier : 0x141471c6091ccba5
     type_code : 103
     p_codes :
      -
        code : |1-
         procedure public AllowEditView() : boolean
         return BTN_COMMAND_VIEW.Visible
        type : 1966080
      -
        code : |1-
         procedure public AllowEditView( bValue is boolean )
         BTN_COMMAND_VIEW.Visible = bValue
        type : 2031616
     template_refs : []
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : FI_SansNom1
resources :
 string_res :
  identifier : 0x136cce7a000ad832
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
